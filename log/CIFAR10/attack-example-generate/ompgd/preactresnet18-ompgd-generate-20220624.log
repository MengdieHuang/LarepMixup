

---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20220624
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/pgd/preactresnet18-cifar10/20220624/00005
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
eps: 0.3
initlize classifier
learned calssify model != None
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
initlize attack classifier
generate latent adversarial exampels
latent pgd attack
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
batch_index: 0
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
batch_index: 1
batch_index: 2
batch_index: 3
batch_index: 4
batch_index: 5
batch_index: 6
batch_index: 7
batch_index: 8
batch_index: 9
batch_index: 10
batch_index: 11
batch_index: 12
batch_index: 13
batch_index: 14
batch_index: 15
batch_index: 16
batch_index: 17
batch_index: 18
batch_index: 19
batch_index: 20
batch_index: 21
batch_index: 22
batch_index: 23
batch_index: 24
batch_index: 25
batch_index: 26
batch_index: 27
batch_index: 28
batch_index: 29
batch_index: 30
batch_index: 31
batch_index: 32
batch_index: 33
batch_index: 34
batch_index: 35
batch_index: 36
Traceback (most recent call last):
  File "tasklauncher-20220624.py", line 138, in <module>
    
  File "/home/maggie/mmat/attacks/advattack.py", line 328, in generatelatentadv
    adv_w_batch = self._attacker.perturb(cle_w_batch, cle_y_batch)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/advertorch/attacks/iterative_projected_gradient.py", line 189, in perturb
    l1_sparsity=self.l1_sparsity,
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/advertorch/attacks/iterative_projected_gradient.py", line 70, in perturb_iterative
    loss.backward()
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/tensor.py", line 245, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/autograd/__init__.py", line 147, in backward
    allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
KeyboardInterrupt
