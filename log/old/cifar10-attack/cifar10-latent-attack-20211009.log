

---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211009
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211009/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:66.4700%
standard trained classifier loss on adversarial testset:1.4116227626800537
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:82.7100%
standard trained classifier loss on clean testset:0.6261844635009766
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:47.6500%
standard trained classifier loss on adversarial testset:2.621169328689575
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:82.9400%
standard trained classifier loss on clean testset:0.6142287254333496
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:32.9600%
standard trained classifier loss on adversarial testset:3.778860092163086
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:83.0800%
standard trained classifier loss on clean testset:0.6148269176483154
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:24.0100%
standard trained classifier loss on adversarial testset:4.619218349456787
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:82.8300%
standard trained classifier loss on clean testset:0.6205796599388123
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:19.4900%
standard trained classifier loss on adversarial testset:4.864011764526367
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:83.1600%
standard trained classifier loss on clean testset:0.6129512190818787
---------------------------------------




---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
usage: tasklauncher-20211009.py run [-h]
                                    [--exp_name {gan-mnist,gan-kmnist,gan-cifar10,gan-cifar100,gan-lsun,gan-imagenet,gan-imagenetmixed10,acgan-mnist,acgan-kmnist,acgan-cifar10,acgan-cifar100,acgan-lsun,acgan-imagenet,acgan-imagenetmixed10,aae-mnist,aae-kmnist,aae-cifar10,aae-cifar100,aae-lsun,aae-imagenet,aae-imagenetmixed10,vae-mnist,vae-kmnist,vae-cifar10,vae-cifar100,vae-lsun,vae-imagenet,vae-imagenetmixed10,stylegan2-mnist,stylegan2-kmnist,stylegan2-cifar10,stylegan2-cifar100,stylegan2-lsun,stylegan2-imagenet,stylegan2-imagenetmixed10,stylegan2ada-mnist,stylegan2ada-kmnist,stylegan2ada-cifar10,stylegan2ada-cifar100,stylegan2ada-lsun,stylegan2ada-imagenet,stylegan2ada-imagenetmixed10,stylegan2ada-svhn,stylegan2ada-stl10,resnet50-mnist,resnet50-kmnist,resnet50-cifar10,resnet50-cifar100,resnet50-lsun,resnet50-imagenet,resnet50-imagenetmixed10,resnet50-svhn,resnet50-stl10,vgg19-mnist,vgg19-kmnist,vgg19-cifar10,vgg19-cifar100,vgg19-lsun,vgg19-imagenet,vgg19-imagenetmixed10,vgg19-svhn,vgg19-stl10,alexnet-mnist,alexnet-kmnist,alexnet-cifar10,alexnet-cifar100,alexnet-lsun,alexnet-imagenet,alexnet-imagenetmixed10,alexnet-svhn,alexnet-stl10,densenet169-mnist,densenet169-kmnist,densenet169-cifar10,densenet169-cifar100,densenet169-lsun,densenet169-imagenet,densenet169-imagenetmixed10,densenet169-svhn,densenet169-stl10,inception_v3-mnist,inception_v3-kmnist,inception_v3-cifar10,inception_v3-cifar100,inception_v3-lsun,inception_v3-imagenet,inception_v3-imagenetmixed10,inception_v3-svhn,inception_v3-stl10,resnet34-mnist,resnet34-kmnist,resnet34-mnist,resnet34-cifar10,resnet34-cifar100,resnet34-lsun,resnet34-imagenet,resnet34-imagenetmixed10,resnet34-svhn,resnet34-stl10,resnet18-mnist,resnet18-kmnist,resnet18-mnist,resnet18-cifar10,resnet18-cifar100,resnet18-lsun,resnet18-imagenet,resnet18-imagenetmixed10,resnet18-svhn,resnet18-stl10,googlenet-mnist,googlenet-kmnist,googlenet-mnist,googlenet-cifar10,googlenet-cifar100,googlenet-lsun,googlenet-imagenet,googlenet-imagenetmixed10,googlenet-svhn,googlenet-stl10,preactresnet18-kmnist,preactresnet18-svhn,preactresnet18-cifar10,preactresnet34-kmnist,preactresnet34-svhn,preactresnet34-cifar10,preactresnet50-kmnist,preactresnet50-svhn,preactresnet50-cifar10,wideresnet2810-kmnist,wideresnet2810-svhn,wideresnet2810-cifar10}]
                                    [--cla_model {resnet34,resnet50,vgg19,alexnet,densenet169,inception_v3,resnet18,googlenet,preactresnet18,preactresnet34,preactresnet50,wideresnet2810}]
                                    [--gen_model {gan,acgan,aae,vae,stylegan2,stylegan2ada}]
                                    [--dataset {mnist,kmnist,cifar10,cifar100,lsun,imagenet,imagenetmixed10,svhn,stl10}]
                                    [--mode {train,test,attack,defense,valid,project,generate,interpolate,defense}]
                                    [--n_classes N_CLASSES]
                                    [--batch_size BATCH_SIZE]
                                    [--epochs EPOCHS] [--lr LR]
                                    [--save_path SAVE_PATH] [--cpus CPUS]
                                    [--gpus GPUS] [--metrics METRICS]
                                    [--conditional CONDITIONAL]
                                    [--dry-run DRY_RUN] [--snap INT]
                                    [--data PATH] [--subset INT]
                                    [--mirror MIRROR] [--cfg CFG]
                                    [--gamma GAMMA] [--kimg KIMG] [--aug AUG]
                                    [--p P] [--target TARGET]
                                    [--augpipe AUGPIPE] [--resume PKL]
                                    [--freezed INT] [--fp32 BOOL]
                                    [--nhwc BOOL] [--nobench BOOL]
                                    [--allow-tf32 BOOL]
                                    [--pretrain_pkl_path PRETRAIN_PKL_PATH]
                                    [--gen_network_pkl GEN_NETWORK_PKL]
                                    [--target_fname FILE]
                                    [--num_steps NUM_STEPS]
                                    [--save_video SAVE_VIDEO]
                                    [--target_dataset PATH]
                                    [--viewdataset_path PATH]
                                    [--project_target_num PROJECT_TARGET_NUM]
                                    [--truncation_psi TRUNCATION_PSI]
                                    [--class_idx CLASS_IDX]
                                    [--noise-mode NOISE_MODE]
                                    [--projected_w FILE]
                                    [--mixed_dataset FILE]
                                    [--generate_seeds GENERATE_SEEDS [GENERATE_SEEDS ...]]
                                    [--projected_w_label FILE]
                                    [--projected_w1 FILE]
                                    [--projected_w2 FILE]
                                    [--projected_w3 FILE]
                                    [--projected_w1_label FILE]
                                    [--projected_w2_label FILE]
                                    [--projected_w3_label FILE]
                                    [--mix_mode {basemixup,maskmixup,adversarialmixup}]
                                    [--mix_w_num MIX_W_NUM]
                                    [--sample_mode {uniformsampler,uniformsampler2,bernoullisampler,bernoullisampler2,betasampler,dirichletsampler}]
                                    [--projected_dataset PROJECTED_DATASET]
                                    [--mix_img_num MIX_IMG_NUM]
                                    [--beta_alpha BETA_ALPHA]
                                    [--train_mode {gen-train,cla-train}]
                                    [--test_mode {gen-test,classifier-test,classifier-advtest}]
                                    [--pretrained_on_imagenet PRETRAINED_ON_IMAGENET]
                                    [--attack_mode {fgsm,deepfool,bim,cw,pgd}]
                                    [--cla_network_pkl CLA_NETWORK_PKL]
                                    [--attack_eps ATTACK_EPS] [--whitebox]
                                    [--blackbox] [--latentattack]
                                    [--defense_mode {at,mmat,rmt}]
                                    [--adv_dataset ADV_DATASET]
                                    [--mix_dataset MIX_DATASET]
                                    [--aug_adv_num AUG_ADV_NUM]
                                    [--aug_num AUG_NUM]
                                    [--aug_mix_rate AUG_MIX_RATE]
                                    [--img_size IMG_SIZE]
                                    [--channels CHANNELS] [--b1 B1] [--b2 B2]
                                    [--latent_dim LATENT_DIM]
                                    [--sample_interval SAMPLE_INTERVAL]
                                    [--seed SEED]
                                    [--save_images_every SAVE_IMAGES_EVERY]
                                    [--save_every SAVE_EVERY]
tasklauncher-20211009.py run: error: argument --cla_network_pkl: expected one argument


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet18-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:62.1000%
standard trained classifier loss on adversarial testset:1.55805242061615
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:81.0000%
standard trained classifier loss on clean testset:0.6658493876457214
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet18-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:41.7000%
standard trained classifier loss on adversarial testset:2.9771339893341064
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.5500%
standard trained classifier loss on clean testset:0.6665547490119934
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet18-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:27.3500%
standard trained classifier loss on adversarial testset:4.355108261108398
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.7700%
standard trained classifier loss on clean testset:0.6659449338912964
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet18-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:19.0000%
standard trained classifier loss on adversarial testset:5.834539413452148
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.9700%
standard trained classifier loss on clean testset:0.6573326587677002
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet18-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:15.9500%
standard trained classifier loss on adversarial testset:7.7476043701171875
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.9000%
standard trained classifier loss on clean testset:0.6621288061141968
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet34-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:61.2100%
standard trained classifier loss on adversarial testset:1.394094467163086
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.8300%
standard trained classifier loss on clean testset:0.6419416069984436
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet34-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:40.9700%
standard trained classifier loss on adversarial testset:2.550568103790283
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.7200%
standard trained classifier loss on clean testset:0.6469184756278992
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet34-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:26.0600%
standard trained classifier loss on adversarial testset:3.7316172122955322
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.0100%
standard trained classifier loss on clean testset:0.6418401002883911
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet34-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:17.6000%
standard trained classifier loss on adversarial testset:4.6308159828186035
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.6900%
standard trained classifier loss on clean testset:0.6499931216239929
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet34-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:14.5200%
standard trained classifier loss on adversarial testset:5.499632358551025
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.7800%
standard trained classifier loss on clean testset:0.6433154940605164
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet50-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:60.3600%
standard trained classifier loss on adversarial testset:1.6811754703521729
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.6600%
standard trained classifier loss on clean testset:0.7150908708572388
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet50-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:41.8000%
standard trained classifier loss on adversarial testset:3.0800397396087646
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.8000%
standard trained classifier loss on clean testset:0.7162004709243774
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet50-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:28.3000%
standard trained classifier loss on adversarial testset:5.0013532638549805
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.6000%
standard trained classifier loss on clean testset:0.7191652059555054
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet50-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:21.1400%
standard trained classifier loss on adversarial testset:12.785786628723145
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.7300%
standard trained classifier loss on clean testset:0.712763249874115
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/resnet50-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:16.8900%
standard trained classifier loss on adversarial testset:39.01417922973633
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.0400%
standard trained classifier loss on clean testset:0.7174672484397888
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/vgg19-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:65.2400%
standard trained classifier loss on adversarial testset:1.8338053226470947
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.2700%
standard trained classifier loss on clean testset:0.9339515566825867
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/vgg19-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:51.7600%
standard trained classifier loss on adversarial testset:2.9056785106658936
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.4100%
standard trained classifier loss on clean testset:0.9303621649742126
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/vgg19-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:39.7800%
standard trained classifier loss on adversarial testset:3.973405361175537
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.4700%
standard trained classifier loss on clean testset:0.9403570294380188
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/vgg19-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:28.1200%
standard trained classifier loss on adversarial testset:4.900104522705078
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.2600%
standard trained classifier loss on clean testset:0.9226270914077759
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/vgg19-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:22.5000%
standard trained classifier loss on adversarial testset:5.308414936065674
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.1700%
standard trained classifier loss on clean testset:0.9382744431495667
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/densenet169-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:62.0500%
standard trained classifier loss on adversarial testset:1.4394441843032837
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.5200%
standard trained classifier loss on clean testset:0.6401699781417847
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/densenet169-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:42.8600%
standard trained classifier loss on adversarial testset:2.6786999702453613
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.2700%
standard trained classifier loss on clean testset:0.646174430847168
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/densenet169-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:28.5800%
standard trained classifier loss on adversarial testset:3.9106292724609375
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.5200%
standard trained classifier loss on clean testset:0.6435916423797607
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/densenet169-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:19.9900%
standard trained classifier loss on adversarial testset:4.819225788116455
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.5900%
standard trained classifier loss on clean testset:0.6373332738876343
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/densenet169-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:16.4300%
standard trained classifier loss on adversarial testset:5.284115314483643
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.7500%
standard trained classifier loss on clean testset:0.6345639228820801
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/googlenet-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:64.3600%
standard trained classifier loss on adversarial testset:1.5358132123947144
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:79.9600%
standard trained classifier loss on clean testset:0.7224149107933044
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/googlenet-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:45.7500%
standard trained classifier loss on adversarial testset:2.7302074432373047
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.5400%
standard trained classifier loss on clean testset:0.6943005323410034
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/googlenet-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:32.2900%
standard trained classifier loss on adversarial testset:3.8067665100097656
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.7400%
standard trained classifier loss on clean testset:0.6931337118148804
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
Traceback (most recent call last):
  File "tasklauncher-20211009.py", line 26, in <module>
    args, exp_result_dir, stylegan2ada_config_kwargs = utils.parseargs.main()
  File "/home/maggie/mmat/utils/parseargs.py", line 358, in main
    check_arguments(args)
  File "/home/maggie/mmat/utils/parseargs.py", line 233, in check_arguments
    raise Exception('args.exp_name=%s,please input the exp_name' % args.exp_name)    
Exception: args.exp_name=None,please input the exp_name


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/googlenet-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:17.4400%
standard trained classifier loss on adversarial testset:4.880804061889648
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.7200%
standard trained classifier loss on clean testset:0.6927959322929382
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet18-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:65.0100%
standard trained classifier loss on adversarial testset:1.768455147743225
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:77.6400%
standard trained classifier loss on clean testset:0.9830776453018188
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet18-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:52.7800%
standard trained classifier loss on adversarial testset:2.753239631652832
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:77.1500%
standard trained classifier loss on clean testset:0.9913416504859924
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet18-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:42.8400%
standard trained classifier loss on adversarial testset:3.7180562019348145
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:78.1600%
standard trained classifier loss on clean testset:0.9739745259284973
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet18-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:33.1800%
standard trained classifier loss on adversarial testset:4.682772159576416
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:77.6000%
standard trained classifier loss on clean testset:0.9653762578964233
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet18-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:27.7800%
standard trained classifier loss on adversarial testset:5.18835973739624
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:78.0700%
standard trained classifier loss on clean testset:0.9641945958137512
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet34-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:61.4600%
standard trained classifier loss on adversarial testset:2.1081202030181885
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.6600%
standard trained classifier loss on clean testset:1.1613621711730957
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet34-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:50.8200%
standard trained classifier loss on adversarial testset:3.0380663871765137
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.7800%
standard trained classifier loss on clean testset:1.1578556299209595
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet34-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:42.0300%
standard trained classifier loss on adversarial testset:3.8354761600494385
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:75.1300%
standard trained classifier loss on clean testset:1.1679269075393677
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet34-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:33.8200%
standard trained classifier loss on adversarial testset:4.712043762207031
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:75.0100%
standard trained classifier loss on clean testset:1.1654763221740723
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet34-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:27.8200%
standard trained classifier loss on adversarial testset:5.300948619842529
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.7200%
standard trained classifier loss on clean testset:1.1576623916625977
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet50-cifar10/20211010/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:61.3200%
standard trained classifier loss on adversarial testset:3.0036842823028564
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.7800%
standard trained classifier loss on clean testset:1.615626335144043
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet50-cifar10/20211010/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:52.8400%
standard trained classifier loss on adversarial testset:4.301124572753906
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.9900%
standard trained classifier loss on clean testset:1.61869478225708
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet50-cifar10/20211010/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:45.6300%
standard trained classifier loss on adversarial testset:5.771965503692627
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.7300%
standard trained classifier loss on clean testset:1.6330866813659668
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet50-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:39.7100%
standard trained classifier loss on adversarial testset:7.924839019775391
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.7000%
standard trained classifier loss on clean testset:1.6456620693206787
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/preactresnet50-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:36.1700%
standard trained classifier loss on adversarial testset:10.646246910095215
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:74.9800%
standard trained classifier loss on clean testset:1.6411470174789429
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/googlenet-cifar10/20211010/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:22.5100%
standard trained classifier loss on adversarial testset:4.5909857749938965
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.3900%
standard trained classifier loss on clean testset:0.7006505131721497
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/googlenet-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10000, 8, 512])
cle_y_test.shape: torch.Size([10000])
testset_total_num: 10000
batch_size: 32
batch_num: 313
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:18.2500%
standard trained classifier loss on adversarial testset:4.905975341796875
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
standard trained classifier accuary on clean testset:80.3900%
standard trained classifier loss on clean testset:0.7025579214096069
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20211010.py", line 100, in <module>
    adv_x_test, adv_y_test = latent_attacker.generatelatentadv(exp_result_dir, cle_test_dataloader, cle_w_test, cle_y_test, gan_net)             
  File "/home/maggie/mmat/attacks/advattack.py", line 280, in generatelatentadv
    adv_w_batch = self._attacker.perturb(cle_w_batch, cle_y_batch)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/advertorch/attacks/one_step_gradient.py", line 64, in perturb
    outputs = self.predict(xadv)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 479, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 413, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 308, in forward
  File "/home/maggie/mmat/utils/stylegan2ada/torch_utils/misc.py", line 102, in decorator
    return fn(*args, **kwargs)
  File "<string>", line 66, in modulated_conv2d
RuntimeError: CUDA out of memory. Tried to allocate 90.00 MiB (GPU 0; 10.76 GiB total capacity; 886.00 MiB already allocated; 58.44 MiB free; 914.00 MiB reserved in total by PyTorch)


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00005
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20211010.py", line 100, in <module>
    adv_x_test, adv_y_test = latent_attacker.generatelatentadv(exp_result_dir, cle_test_dataloader, cle_w_test, cle_y_test, gan_net)             
  File "/home/maggie/mmat/attacks/advattack.py", line 280, in generatelatentadv
    adv_w_batch = self._attacker.perturb(cle_w_batch, cle_y_batch)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/advertorch/attacks/one_step_gradient.py", line 64, in perturb
    outputs = self.predict(xadv)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 479, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 413, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 308, in forward
  File "/home/maggie/mmat/utils/stylegan2ada/torch_utils/misc.py", line 102, in decorator
    return fn(*args, **kwargs)
  File "<string>", line 66, in modulated_conv2d
RuntimeError: CUDA out of memory. Tried to allocate 90.00 MiB (GPU 0; 10.76 GiB total capacity; 886.00 MiB already allocated; 58.44 MiB free; 914.00 MiB reserved in total by PyTorch)


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00006
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20211010.py", line 100, in <module>
    adv_x_test, adv_y_test = latent_attacker.generatelatentadv(exp_result_dir, cle_test_dataloader, cle_w_test, cle_y_test, gan_net)             
  File "/home/maggie/mmat/attacks/advattack.py", line 280, in generatelatentadv
    adv_w_batch = self._attacker.perturb(cle_w_batch, cle_y_batch)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/advertorch/attacks/one_step_gradient.py", line 64, in perturb
    outputs = self.predict(xadv)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 479, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 413, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 308, in forward
  File "/home/maggie/mmat/utils/stylegan2ada/torch_utils/misc.py", line 102, in decorator
    return fn(*args, **kwargs)
  File "<string>", line 66, in modulated_conv2d
RuntimeError: CUDA out of memory. Tried to allocate 90.00 MiB (GPU 0; 10.76 GiB total capacity; 886.00 MiB already allocated; 58.44 MiB free; 914.00 MiB reserved in total by PyTorch)


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00007
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20211010.py", line 100, in <module>
    adv_x_test, adv_y_test = latent_attacker.generatelatentadv(exp_result_dir, cle_test_dataloader, cle_w_test, cle_y_test, gan_net)             
  File "/home/maggie/mmat/attacks/advattack.py", line 280, in generatelatentadv
    adv_w_batch = self._attacker.perturb(cle_w_batch, cle_y_batch)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/advertorch/attacks/one_step_gradient.py", line 64, in perturb
    outputs = self.predict(xadv)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 479, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 413, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 308, in forward
  File "/home/maggie/mmat/utils/stylegan2ada/torch_utils/misc.py", line 102, in decorator
    return fn(*args, **kwargs)
  File "<string>", line 66, in modulated_conv2d
RuntimeError: CUDA out of memory. Tried to allocate 90.00 MiB (GPU 0; 10.76 GiB total capacity; 886.00 MiB already allocated; 58.44 MiB free; 914.00 MiB reserved in total by PyTorch)


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00008
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20211010.py", line 100, in <module>
    adv_x_test, adv_y_test = latent_attacker.generatelatentadv(exp_result_dir, cle_test_dataloader, cle_w_test, cle_y_test, gan_net)             
  File "/home/maggie/mmat/attacks/advattack.py", line 280, in generatelatentadv
    adv_w_batch = self._attacker.perturb(cle_w_batch, cle_y_batch)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/advertorch/attacks/one_step_gradient.py", line 64, in perturb
    outputs = self.predict(xadv)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/container.py", line 119, in forward
    input = module(input)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 479, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 413, in forward
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "<string>", line 308, in forward
  File "/home/maggie/mmat/utils/stylegan2ada/torch_utils/misc.py", line 102, in decorator
    return fn(*args, **kwargs)
  File "<string>", line 66, in modulated_conv2d
RuntimeError: CUDA out of memory. Tried to allocate 90.00 MiB (GPU 0; 10.76 GiB total capacity; 886.00 MiB already allocated; 58.44 MiB free; 914.00 MiB reserved in total by PyTorch)


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.02
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10, 3, 32, 32])
adv_y_test.shape: torch.Size([10])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:90.0000%
standard trained classifier loss on adversarial testset:0.3146390914916992
cle_x_test.shape: torch.Size([10, 3, 32, 32])
cle_y_test.shape: torch.Size([10])
standard trained classifier accuary on clean testset:90.0000%
standard trained classifier loss on clean testset:0.7618227005004883
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00005
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.05
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10, 3, 32, 32])
adv_y_test.shape: torch.Size([10])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:70.0000%
standard trained classifier loss on adversarial testset:1.170145869255066
cle_x_test.shape: torch.Size([10, 3, 32, 32])
cle_y_test.shape: torch.Size([10])
standard trained classifier accuary on clean testset:90.0000%
standard trained classifier loss on clean testset:0.10275186598300934
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00006
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.1
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10, 3, 32, 32])
adv_y_test.shape: torch.Size([10])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:70.0000%
standard trained classifier loss on adversarial testset:1.429826259613037
cle_x_test.shape: torch.Size([10, 3, 32, 32])
cle_y_test.shape: torch.Size([10])
standard trained classifier accuary on clean testset:100.0000%
standard trained classifier loss on clean testset:0.047388333827257156
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00007
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.2
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10, 3, 32, 32])
adv_y_test.shape: torch.Size([10])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:40.0000%
standard trained classifier loss on adversarial testset:2.7100415229797363
cle_x_test.shape: torch.Size([10, 3, 32, 32])
cle_y_test.shape: torch.Size([10])
standard trained classifier accuary on clean testset:100.0000%
standard trained classifier loss on clean testset:0.03478708118200302
---------------------------------------




---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20211010
whitebox attack
Experiment result save dir: /home/maggie/mmat/result/attack/fgsm/alexnet-cifar10/20211010/00008
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
latent adversarial attack.............
initlize classifier
learned calssify model != None
initlize attack classifier
generate latent adversarial exampels
latent fgsm attack
eps： 0.3
cle_w_test.shape: torch.Size([10, 8, 512])
cle_y_test.shape: torch.Size([10])
testset_total_num: 10
batch_size: 32
batch_num: 1
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
adv_x_test.shape: torch.Size([10, 3, 32, 32])
adv_y_test.shape: torch.Size([10])
finished generate latent adversarial examples !
Saving cifar10 testset  adversarial examples...
standard trained classifier accuary on adversarial testset:50.0000%
standard trained classifier loss on adversarial testset:3.740870952606201
cle_x_test.shape: torch.Size([10, 3, 32, 32])
cle_y_test.shape: torch.Size([10])
standard trained classifier accuary on clean testset:90.0000%
standard trained classifier loss on clean testset:0.22756795585155487
---------------------------------------


