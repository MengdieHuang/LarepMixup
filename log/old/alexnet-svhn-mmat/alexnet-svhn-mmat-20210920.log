

---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210920
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00028
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
initlize classifier
learned calssify model != None
cle_w_train.shape: torch.Size([11813, 8, 512])
cle_y_train.shape: torch.Size([11813, 8])
cle_x_test.shape: torch.Size([26032, 3, 32, 32])
cle_y_test.shape: torch.Size([26032])
adv_x_test.shape: torch.Size([26032, 3, 32, 32])
adv_y_test.shape: torch.Size([26032])
/home/maggie/mmat/clamodels/classifier.py:1306: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_x = torch.tensor(cle_w_train)
/home/maggie/mmat/clamodels/classifier.py:1307: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_y = torch.tensor(cle_y_train)
/home/maggie/mmat/clamodels/classifier.py:1309: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_x = torch.tensor(adv_x_test)
/home/maggie/mmat/clamodels/classifier.py:1310: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_y = torch.tensor(adv_y_test)
/home/maggie/mmat/clamodels/classifier.py:1312: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_x = torch.tensor(cle_x_test)
/home/maggie/mmat/clamodels/classifier.py:1313: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_y = torch.tensor(cle_y_test)
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
generating testset adversarial examples...
finished generate testset adversarial examples !
Accuary of before rmt trained classifier on adversarial testset:40.0238%
Loss of before mmat trained classifier on adversarial testset:4.548426628112793
epoch_num: 12
batch_num: 47
0epoch learning rate:0.01
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.6015,  8.4529, -4.3807, -3.4984,  7.1721, -6.9503, -2.5477, -5.9754,
         3.6028, -7.1528], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8569, device='cuda:0')
alpha_2[0]: tensor(0.1431, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 1/47] [Batch classify loss: 4.728683] [Batch classify Acc: 0.574219]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-4.9408, -1.1996, -1.8562,  1.1084, -3.2871,  9.0570,  0.6758, -1.1909,
        -2.3034, -1.7220], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8040, device='cuda:0')
alpha_2[0]: tensor(0.1960, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 2/47] [Batch classify loss: 3.726227] [Batch classify Acc: 0.591797]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
Traceback (most recent call last):
  File "tasklauncher-20210920.py", line 161, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train,cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1365, in rmt
    inputs, targets = mixup_data(args, exp_result_dir, stylegan2ada_config_kwargs, inputs, targets)      #   混合样本 two-hot标签
  File "/home/maggie/mmat/clamodels/classifier.py", line 1684, in mixup_data
    mix_x_train, mix_y_train = generate_model.generate()
  File "/home/maggie/mmat/genmodels/mixgenerate.py", line 484, in generate
    self._model.generate(self._exp_result_dir, self.mix_w_train, self.mix_y_train) #    都从这里进入
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1848, in generate
    generated_x_set, generated_y_set = self.__generatemain__(self._args, self._exp_result_dir, interpolated_w_set, interpolated_y_set)
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1859, in __generatemain__
    generated_x_set, generated_y_set = self.__generatefromntensor__()
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1936, in __generatefromntensor__
    interpolated_w_index = i
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1961, in __imagegeneratefromwset__
    G = legacy.load_network_pkl(f)['G_ema'].to(device)                                                                  #   type: ignore
  File "/home/maggie/mmat/utils/stylegan2ada/legacy.py", line 25, in load_network_pkl
    data = _LegacyUnpickler(f).load()
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/storage.py", line 160, in _load_from_bytes
    def _load_from_bytes(b):
KeyboardInterrupt


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210920
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00029
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
initlize classifier
learned calssify model != None
cle_w_train.shape: torch.Size([11818, 8, 512])
cle_y_train.shape: torch.Size([11818, 8])
cle_x_test.shape: torch.Size([26032, 3, 32, 32])
cle_y_test.shape: torch.Size([26032])
adv_x_test.shape: torch.Size([26032, 3, 32, 32])
adv_y_test.shape: torch.Size([26032])
/home/maggie/mmat/clamodels/classifier.py:1306: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_x = torch.tensor(cle_w_train)
/home/maggie/mmat/clamodels/classifier.py:1307: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_y = torch.tensor(cle_y_train)
/home/maggie/mmat/clamodels/classifier.py:1309: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_x = torch.tensor(adv_x_test)
/home/maggie/mmat/clamodels/classifier.py:1310: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_y = torch.tensor(adv_y_test)
/home/maggie/mmat/clamodels/classifier.py:1312: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_x = torch.tensor(cle_x_test)
/home/maggie/mmat/clamodels/classifier.py:1313: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_y = torch.tensor(cle_y_test)
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
generating testset adversarial examples...
finished generate testset adversarial examples !
Accuary of before rmt trained classifier on adversarial testset:39.9854%
Loss of before mmat trained classifier on adversarial testset:4.5337233543396
epoch_num: 12
batch_num: 47
0epoch learning rate:0.01
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
Traceback (most recent call last):
  File "tasklauncher-20210920.py", line 161, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train,cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1370, in rmt
    
TypeError: exceptions must derive from BaseException


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210920
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00000
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
initlize classifier
learned calssify model != None
cle_w_train.shape: torch.Size([11830, 8, 512])
cle_y_train.shape: torch.Size([11830, 8])
cle_x_test.shape: torch.Size([26032, 3, 32, 32])
cle_y_test.shape: torch.Size([26032])
adv_x_test.shape: torch.Size([26032, 3, 32, 32])
adv_y_test.shape: torch.Size([26032])
/home/maggie/mmat/clamodels/classifier.py:1306: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_x = torch.tensor(cle_w_train)
/home/maggie/mmat/clamodels/classifier.py:1307: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_y = torch.tensor(cle_y_train)
/home/maggie/mmat/clamodels/classifier.py:1309: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_x = torch.tensor(adv_x_test)
/home/maggie/mmat/clamodels/classifier.py:1310: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_y = torch.tensor(adv_y_test)
/home/maggie/mmat/clamodels/classifier.py:1312: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_x = torch.tensor(cle_x_test)
/home/maggie/mmat/clamodels/classifier.py:1313: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_y = torch.tensor(cle_y_test)
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
Traceback (most recent call last):
  File "tasklauncher-20210920.py", line 161, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train,cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1320, in rmt
    epoch_x_test_adv, epoch_y_test_adv = epoch_attack_classifier.generateadvfromtestsettensor(self._exp_result_dir, self._cle_test_tensorset_x, self._cle_test_tensorset_y) 
  File "/home/maggie/mmat/attacks/advattack.py", line 280, in generateadvfromtestsettensor
    self._x_test = self._x_test.cpu().numpy()
AttributeError: 'str' object has no attribute 'cpu'


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210920
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00001
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
initlize classifier
learned calssify model != None
cle_w_train.shape: torch.Size([11835, 8, 512])
cle_y_train.shape: torch.Size([11835, 8])
cle_x_test.shape: torch.Size([26032, 3, 32, 32])
cle_y_test.shape: torch.Size([26032])
adv_x_test.shape: torch.Size([26032, 3, 32, 32])
adv_y_test.shape: torch.Size([26032])
/home/maggie/mmat/clamodels/classifier.py:1306: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_x = torch.tensor(cle_w_train)
/home/maggie/mmat/clamodels/classifier.py:1307: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_y = torch.tensor(cle_y_train)
/home/maggie/mmat/clamodels/classifier.py:1309: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_x = torch.tensor(adv_x_test)
/home/maggie/mmat/clamodels/classifier.py:1310: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_y = torch.tensor(adv_y_test)
/home/maggie/mmat/clamodels/classifier.py:1312: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_x = torch.tensor(cle_x_test)
/home/maggie/mmat/clamodels/classifier.py:1313: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_y = torch.tensor(cle_y_test)
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
Traceback (most recent call last):
  File "tasklauncher-20210920.py", line 161, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train,cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1320, in rmt
    epoch_x_test_adv, epoch_y_test_adv = epoch_attack_classifier.generateadvfromtestsettensor(self._exp_result_dir, self._cle_test_tensorset_x, self._cle_test_tensorset_y) 
  File "/home/maggie/mmat/attacks/advattack.py", line 280, in generateadvfromtestsettensor
    self._x_test = self._x_test.cpu().numpy()
AttributeError: 'str' object has no attribute 'cpu'


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210920
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00002
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
initlize classifier
learned calssify model != None
cle_w_train.shape: torch.Size([11841, 8, 512])
cle_y_train.shape: torch.Size([11841, 8])
cle_x_test.shape: torch.Size([26032, 3, 32, 32])
cle_y_test.shape: torch.Size([26032])
adv_x_test.shape: torch.Size([26032, 3, 32, 32])
adv_y_test.shape: torch.Size([26032])
/home/maggie/mmat/clamodels/classifier.py:1306: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_x = torch.tensor(cle_w_train)
/home/maggie/mmat/clamodels/classifier.py:1307: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_y = torch.tensor(cle_y_train)
/home/maggie/mmat/clamodels/classifier.py:1309: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_x = torch.tensor(adv_x_test)
/home/maggie/mmat/clamodels/classifier.py:1310: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_y = torch.tensor(adv_y_test)
/home/maggie/mmat/clamodels/classifier.py:1312: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_x = torch.tensor(cle_x_test)
/home/maggie/mmat/clamodels/classifier.py:1313: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_y = torch.tensor(cle_y_test)
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
Traceback (most recent call last):
  File "tasklauncher-20210920.py", line 161, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train,cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1320, in rmt
    epoch_x_test_adv, epoch_y_test_adv = epoch_attack_classifier.generateadvfromtestsettensor(self._cle_test_tensorset_x, self._cle_test_tensorset_y) 
  File "/home/maggie/mmat/attacks/advattack.py", line 273, in generateadvfromtestsettensor
    self._exp_result_dir = os.path.join(self._exp_result_dir,f'attack-{self._args.dataset}-dataset')
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/posixpath.py", line 80, in join
    a = os.fspath(a)
TypeError: expected str, bytes or os.PathLike object, not NoneType


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210920
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00003
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
initlize classifier
learned calssify model != None
cle_w_train.shape: torch.Size([11848, 8, 512])
cle_y_train.shape: torch.Size([11848, 8])
cle_x_test.shape: torch.Size([26032, 3, 32, 32])
cle_y_test.shape: torch.Size([26032])
adv_x_test.shape: torch.Size([26032, 3, 32, 32])
adv_y_test.shape: torch.Size([26032])
/home/maggie/mmat/clamodels/classifier.py:1306: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_x = torch.tensor(cle_w_train)
/home/maggie/mmat/clamodels/classifier.py:1307: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._train_tensorset_y = torch.tensor(cle_y_train)
/home/maggie/mmat/clamodels/classifier.py:1309: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_x = torch.tensor(adv_x_test)
/home/maggie/mmat/clamodels/classifier.py:1310: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._adv_test_tensorset_y = torch.tensor(adv_y_test)
/home/maggie/mmat/clamodels/classifier.py:1312: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_x = torch.tensor(cle_x_test)
/home/maggie/mmat/clamodels/classifier.py:1313: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  self._cle_test_tensorset_y = torch.tensor(cle_y_test)
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
generating testset adversarial examples...
finished generate testset adversarial examples !
Accuary of before rmt trained classifier on adversarial testset:40.1813%
Loss of before mmat trained classifier on adversarial testset:4.5155863761901855
epoch_num: 12
batch_num: 47
0epoch learning rate:0.01
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 4.0677, -2.2781, -3.4406, -5.2447, -4.9642, -3.8287, 14.5350, -5.3571,
         3.5173, -5.6800], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5253, device='cuda:0')
alpha_2[0]: tensor(0.4747, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 1/12] [Batch 1/47] [Batch classify loss: 4.540936]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.9119,  0.9436,  8.5743,  2.2646, -2.0163, -0.1045, -2.2507, -3.4797,
        -2.8929, -1.4280], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8788, device='cuda:0')
alpha_2[0]: tensor(0.1212, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 1/12] [Batch 2/47] [Batch classify loss: 3.419977]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 6.3613,  2.2223, -1.6507, -1.4559, -2.1204, -4.0314,  1.5547, -2.5469,
        -0.2055, -3.2760], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6727, device='cuda:0')
alpha_2[0]: tensor(0.3273, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 1/12] [Batch 3/47] [Batch classify loss: 3.655528]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8176, -1.3470,  0.4815,  6.3532, -2.6548,  0.8725, -1.8049, -0.0484,
        -1.7459, -1.3499], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5261, device='cuda:0')
alpha_2[0]: tensor(0.4739, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 4/47] [Batch classify loss: 3.380786]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 6.6836, -0.2115,  2.6825, -1.7574, -2.9064, -4.6387,  0.2003, -2.4456,
        -1.4202,  2.4525], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8017, device='cuda:0')
alpha_2[0]: tensor(0.1983, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 5/47] [Batch classify loss: 3.140077]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.6450, -0.2068, -0.1308,  1.1155, -0.7813, -0.4189, -0.3385, -2.7038,
         3.9575, -0.0172], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8399, device='cuda:0')
alpha_2[0]: tensor(0.1601, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 6/47] [Batch classify loss: 2.493959]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-3.2083,  0.0726,  2.3048, 17.5007, -8.5594,  0.0303,  0.9404, -0.2079,
        -7.8450, -3.9418], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9542, device='cuda:0')
alpha_2[0]: tensor(0.0458, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 1/12] [Batch 7/47] [Batch classify loss: 2.420926]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.7909,  0.7838,  0.1812,  1.2503,  0.3548,  0.7524, -0.6080, -0.9866,
        -0.3062, -0.3053], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7246, device='cuda:0')
alpha_2[0]: tensor(0.2754, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 1/12] [Batch 8/47] [Batch classify loss: 2.018971]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.4568,  1.5347,  0.7029, -0.4339,  1.1435, -0.6530, -1.0884, -2.2620,
         2.0674, -0.0581], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 9/47] [Batch classify loss: 2.326147]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.7788,  0.4941,  2.4239,  4.7003, -1.7468,  1.9210, -2.7509, -1.7652,
         2.1591, -0.8587], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9950, device='cuda:0')
alpha_2[0]: tensor(0.0050, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 1/12] [Batch 10/47] [Batch classify loss: 2.176343]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.8856,  1.2754, -0.3028,  1.0222,  1.2428, -0.2865, -0.4772, -0.8134,
         0.2620,  0.2216], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 11/47] [Batch classify loss: 2.049141]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.4108,  1.3216, -0.1754,  1.7667, -2.1669,  1.9343,  1.7506, -2.2761,
         0.5797, -2.3561], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9201, device='cuda:0')
alpha_2[0]: tensor(0.0799, device='cuda:0')
w1_label_index[0]: tensor(6, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 12/47] [Batch classify loss: 1.965675]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.4745,  1.0947,  0.6034,  0.9569,  0.6249, -0.3624, -0.6418,  0.0487,
        -0.0564, -1.2939], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9063, device='cuda:0')
alpha_2[0]: tensor(0.0937, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 13/47] [Batch classify loss: 1.951856]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5560,  0.9967,  0.8280,  0.1962,  0.6840, -0.2114, -0.3255, -0.9424,
        -0.7517,  0.8781], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7251, device='cuda:0')
alpha_2[0]: tensor(0.2749, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 1/12] [Batch 14/47] [Batch classify loss: 1.877272]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.3369,  1.1148,  0.8676,  0.5918,  0.3777,  1.1366,  0.0589, -1.0193,
        -0.4540, -0.2684], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9031, device='cuda:0')
alpha_2[0]: tensor(0.0969, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 1/12] [Batch 15/47] [Batch classify loss: 1.941072]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5503,  0.5104,  0.8315,  0.7932,  0.2229,  0.5106,  0.4764, -1.2640,
         0.7796, -0.2748], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 16/47] [Batch classify loss: 1.847998]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0395,  1.0471,  0.6322,  1.8099, -0.9039,  0.9124, -1.3704,  2.0052,
        -1.1342,  0.7664], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9293, device='cuda:0')
alpha_2[0]: tensor(0.0707, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 17/47] [Batch classify loss: 1.945244]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.2923,  1.9032,  1.4330,  0.6811,  1.4869,  0.5003, -0.0249,  0.4806,
         1.3660,  0.1362], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7991, device='cuda:0')
alpha_2[0]: tensor(0.2009, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 18/47] [Batch classify loss: 1.900601]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.4858,  0.2329,  0.5367,  0.1984,  0.3209,  0.1764,  0.0317, -0.2113,
        -0.3576,  0.1062], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7254, device='cuda:0')
alpha_2[0]: tensor(0.2746, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 19/47] [Batch classify loss: 1.943052]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 2.1830,  1.1728,  0.6774, -0.2050,  0.1894, -1.0745,  0.1348, -0.6208,
        -0.7380,  2.2558], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9011, device='cuda:0')
alpha_2[0]: tensor(0.0989, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 20/47] [Batch classify loss: 1.899877]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.3650,  1.5447, -0.2010,  0.5828,  0.9716,  0.2092,  0.1383,  0.2221,
        -1.3471, -0.1693], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 21/47] [Batch classify loss: 1.847884]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.6996,  0.4138,  0.4218,  1.0935, -0.1457,  0.6022, -0.2812,  1.1377,
        -0.0745,  0.4019], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8766, device='cuda:0')
alpha_2[0]: tensor(0.1234, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 22/47] [Batch classify loss: 1.834271]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.8102,  1.5196,  4.8080,  0.9564,  1.9192,  1.6077,  0.7332, -0.1074,
         1.4420,  0.5050], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 23/47] [Batch classify loss: 1.943554]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.6575,  2.5456, -0.1908, -0.4659,  0.5275,  0.5064,  0.4416,  0.4134,
        -0.6554, -0.0636], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6759, device='cuda:0')
alpha_2[0]: tensor(0.3241, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 24/47] [Batch classify loss: 1.759784]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.7889,  0.0686,  0.7276,  0.9677, -0.7087,  2.1567,  0.7737, -0.0630,
        -0.1382, -0.2750], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7413, device='cuda:0')
alpha_2[0]: tensor(0.2587, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 25/47] [Batch classify loss: 1.775072]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5009,  1.3061,  0.5207,  1.1783, -1.0394,  0.2322, -1.1796,  1.4710,
        -1.0707,  0.4023], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 1/12] [Batch 26/47] [Batch classify loss: 1.830851]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.1478,  0.6232,  0.8358, -0.4740,  0.6001, -1.1271,  0.3667, -0.0765,
        -0.0780,  1.1297], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7158, device='cuda:0')
alpha_2[0]: tensor(0.2842, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 27/47] [Batch classify loss: 1.773481]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7127,  1.2297,  1.2966,  1.7791,  0.4020, -0.4633, -0.4428, -1.6990,
         1.9280,  0.3366], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7787, device='cuda:0')
alpha_2[0]: tensor(0.2213, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 28/47] [Batch classify loss: 1.738461]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7775,  1.4911,  2.4243,  4.2103,  1.0816,  1.1857,  0.0710,  0.4252,
         1.1214, -1.0676], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9500, device='cuda:0')
alpha_2[0]: tensor(0.0500, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 1/12] [Batch 29/47] [Batch classify loss: 1.629627]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.0243,  1.3410,  7.2004,  0.6669,  0.5590, -0.8564,  0.0963, -0.6284,
         1.5821,  1.4260], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 30/47] [Batch classify loss: 1.646586]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.3792,  1.6373, -1.1044,  1.9304,  0.0274,  0.8396, -1.0485,  3.1403,
        -0.7596, -0.0426], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 1/12] [Batch 31/47] [Batch classify loss: 1.804145]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.4594,  2.7141,  1.1783, -1.1155,  5.8219,  1.2734,  0.2393,  0.7900,
        -1.7682,  1.3138], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9106, device='cuda:0')
alpha_2[0]: tensor(0.0894, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 1/12] [Batch 32/47] [Batch classify loss: 1.714103]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0334,  2.4251,  0.2369, -0.5335,  1.2035, -0.5566, -0.4579,  0.3670,
        -0.7536, -0.6486], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7546, device='cuda:0')
alpha_2[0]: tensor(0.2454, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 1/12] [Batch 33/47] [Batch classify loss: 1.615308]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.2894,  0.8534,  0.8312, -0.8103,  0.9196, -1.0406, -0.2040, -0.0995,
        -0.6427,  0.3207], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9265, device='cuda:0')
alpha_2[0]: tensor(0.0735, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 1/12] [Batch 34/47] [Batch classify loss: 1.816358]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2036,  1.9411,  0.3342, -0.1342,  0.0542, -0.3786, -0.2275,  0.5495,
        -1.3365, -0.4470], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 35/47] [Batch classify loss: 1.780506]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.1290,  0.6920,  0.5013,  2.7321, -0.2448,  0.2128, -0.6694,  2.0640,
        -0.2777, -1.6601], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 1/12] [Batch 36/47] [Batch classify loss: 1.650717]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.5430, -0.2257,  1.1780,  1.3272, -0.5877,  3.7959,  0.4845, -0.7704,
         0.6754, -1.0516], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8188, device='cuda:0')
alpha_2[0]: tensor(0.1812, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 1/12] [Batch 37/47] [Batch classify loss: 1.557640]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8423,  1.0606,  0.5939,  4.5647,  0.1927,  0.4939, -0.8819,  0.3256,
        -0.3229, -0.2746], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6003, device='cuda:0')
alpha_2[0]: tensor(0.3997, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 1/12] [Batch 38/47] [Batch classify loss: 1.633145]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.8345, -0.7631, -0.0921,  1.4632, -1.3557,  2.5756,  0.5597, -1.1392,
         0.8566, -1.0212], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5209, device='cuda:0')
alpha_2[0]: tensor(0.4791, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 39/47] [Batch classify loss: 1.721893]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.6691,  1.5622,  5.9452,  0.8881,  1.1922, -3.2281, -0.2090,  0.0639,
         1.1391,  1.2849], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5048, device='cuda:0')
alpha_2[0]: tensor(0.4952, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 40/47] [Batch classify loss: 1.763555]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 3.6099,  0.4015, -0.5529, -1.9071,  1.8341, -2.0782,  1.8715, -0.9475,
         1.0617, -0.2858], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8116, device='cuda:0')
alpha_2[0]: tensor(0.1884, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 41/47] [Batch classify loss: 1.577276]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5597, -0.1207,  3.1293,  1.5701,  1.2768, -1.0904, -0.6036, -0.6060,
         0.2308,  0.5858], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8343, device='cuda:0')
alpha_2[0]: tensor(0.1657, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 42/47] [Batch classify loss: 1.607628]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2146,  2.7189,  1.1045, -0.5411,  0.7364, -0.6495, -0.4722, -0.4659,
        -0.4882, -0.4249], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8996, device='cuda:0')
alpha_2[0]: tensor(0.1004, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 1/12] [Batch 43/47] [Batch classify loss: 1.673469]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.9683,  3.4699,  0.2444,  0.0046,  1.2320,  0.1823, -0.1724, -0.1550,
        -1.2675, -1.4962], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5932, device='cuda:0')
alpha_2[0]: tensor(0.4068, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 1/12] [Batch 44/47] [Batch classify loss: 1.624948]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0825,  0.2048,  0.6878,  0.8710, -0.0433,  1.5866,  0.7656, -0.7754,
        -0.8910, -0.4742], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5980, device='cuda:0')
alpha_2[0]: tensor(0.4020, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 1/12] [Batch 45/47] [Batch classify loss: 1.723017]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.6029,  1.2713,  3.5543,  1.0912,  0.4052, -2.1675, -0.5821,  1.2900,
        -0.3635, -0.0506], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8574, device='cuda:0')
alpha_2[0]: tensor(0.1426, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 1/12] [Batch 46/47] [Batch classify loss: 1.634538]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([72, 8, 512])
generate_model.cle_y_train.shape: torch.Size([72, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([72, 8, 512])
projected_w_set_y.shape:  torch.Size([72, 8, 10])
inputs.shape: torch.Size([72, 3, 32, 32])
targets.shape: torch.Size([72, 10])
batch_outputs[0]: tensor([-0.4070,  0.4226, -0.0766,  2.7538, -0.3546,  0.0394, -0.3989,  0.0112,
         0.5960,  0.0391], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6123, device='cuda:0')
alpha_2[0]: tensor(0.3877, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 1/12] [Batch 47/47] [Batch classify loss: 1.872659]
0001 epoch rmt trained classifier accuary on the clean testing examples:88.2452%
0001 epoch rmt trained classifier loss on the clean testing examples:0.8205
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
generating testset adversarial examples...
finished generate testset adversarial examples !
0001 epoch rmt trained classifier accuary on adversarial testset:36.1209%
0001 epoch rmt trained classifier loss on adversarial testset:2.012160539627075
tensorboard_log_dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00003/rmt-svhn-dataset/tensorboard-log-run-acc-adv
tensorboard_log_dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00003/rmt-svhn-dataset/tensorboard-log-run-acc-cle
1epoch learning rate:0.01
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7639,  2.9402,  0.9557,  0.1861, -0.1498, -0.2248, -0.1764, -1.6574,
        -0.2487, -1.6254], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8684, device='cuda:0')
alpha_2[0]: tensor(0.1316, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 2/12] [Batch 1/47] [Batch classify loss: 1.716871]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.1061, -0.2906,  0.8727,  0.2777, -0.9236, -0.1197,  0.6726, -1.3066,
         2.3830,  0.7804], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9921, device='cuda:0')
alpha_2[0]: tensor(0.0079, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 2/12] [Batch 2/47] [Batch classify loss: 1.607870]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.2599,  0.8448,  0.5416,  0.0786, -0.3202, -0.2624, -0.8651,  0.2740,
        -0.3181,  0.0783], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5244, device='cuda:0')
alpha_2[0]: tensor(0.4756, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 2/12] [Batch 3/47] [Batch classify loss: 1.586027]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.4298,  0.5839,  0.9001,  0.8695, -0.3696, -0.1508, -0.9029, -0.0060,
        -0.7627, -0.1583], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8142, device='cuda:0')
alpha_2[0]: tensor(0.1858, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 4/47] [Batch classify loss: 1.583550]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5009,  2.7531,  0.2146, -0.9280,  0.9391, -0.7152, -0.8110, -0.5653,
         0.2746, -0.6226], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8583, device='cuda:0')
alpha_2[0]: tensor(0.1417, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 2/12] [Batch 5/47] [Batch classify loss: 1.568462]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.6426,  1.5356, -1.4867,  0.9273,  4.1053,  1.9355, -0.7236, -1.0860,
        -0.9575,  0.4645], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5695, device='cuda:0')
alpha_2[0]: tensor(0.4305, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 2/12] [Batch 6/47] [Batch classify loss: 1.629666]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.9650,  1.6369,  0.2830, -0.0906,  0.6850, -0.0860,  0.1522, -0.2988,
        -0.6254, -0.5229], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7774, device='cuda:0')
alpha_2[0]: tensor(0.2226, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 2/12] [Batch 7/47] [Batch classify loss: 1.544888]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0276,  2.3489,  0.7836, -0.0741,  0.2750, -0.4451, -1.2145, -0.0359,
        -0.4791, -0.1344], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6221, device='cuda:0')
alpha_2[0]: tensor(0.3779, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 2/12] [Batch 8/47] [Batch classify loss: 1.683683]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2012,  0.6208,  3.3398,  0.8947,  0.6107, -0.5853, -1.1256,  0.7209,
         0.0975, -0.0673], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8789, device='cuda:0')
alpha_2[0]: tensor(0.1211, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 2/12] [Batch 9/47] [Batch classify loss: 1.626260]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.6556,  1.9030, -0.7813,  1.6202,  5.4049,  0.6354, -1.5014, -0.0845,
         0.6253,  0.7537], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6215, device='cuda:0')
alpha_2[0]: tensor(0.3785, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 2/12] [Batch 10/47] [Batch classify loss: 1.557776]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.1820,  1.0282, -0.0883,  0.2873,  1.5752, -0.2154, -0.4468, -0.4618,
         0.0948, -0.3027], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5784, device='cuda:0')
alpha_2[0]: tensor(0.4216, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 11/47] [Batch classify loss: 1.685013]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7332,  0.6665,  2.0168,  0.3212,  0.7021, -0.6358, -1.2300, -0.4608,
         0.3410, -0.3224], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7719, device='cuda:0')
alpha_2[0]: tensor(0.2281, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 12/47] [Batch classify loss: 1.617093]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3304,  0.9379, -0.0325, -0.0927,  1.2516, -0.3511, -0.8768, -0.0659,
        -0.2399, -0.3647], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6198, device='cuda:0')
alpha_2[0]: tensor(0.3802, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 2/12] [Batch 13/47] [Batch classify loss: 1.658893]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.9349,  0.8094,  2.6618,  0.2352,  0.8954, -0.2928, -0.6444, -0.7188,
         0.5543,  0.1886], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9822, device='cuda:0')
alpha_2[0]: tensor(0.0178, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 14/47] [Batch classify loss: 1.610999]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5961,  3.2090,  0.0054,  0.0182,  1.1504, -0.6820, -1.9964,  1.0789,
        -0.2958, -0.6908], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6422, device='cuda:0')
alpha_2[0]: tensor(0.3578, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 2/12] [Batch 15/47] [Batch classify loss: 1.561453]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5039,  0.8659,  3.8663,  0.1637,  0.5711, -0.3246, -1.6133, -1.7218,
         1.4427,  0.7087], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9355, device='cuda:0')
alpha_2[0]: tensor(0.0645, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 2/12] [Batch 16/47] [Batch classify loss: 1.594883]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5426,  0.3414, -0.1643, -0.3419,  0.1133,  0.2594, -0.1189, -0.7162,
        -0.0555,  0.7934], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7186, device='cuda:0')
alpha_2[0]: tensor(0.2814, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 2/12] [Batch 17/47] [Batch classify loss: 1.532736]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.6838,  0.9144, -0.1016,  0.0930,  0.5803, -0.2549, -0.3153, -0.4172,
        -0.1565, -0.1061], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8598, device='cuda:0')
alpha_2[0]: tensor(0.1402, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 2/12] [Batch 18/47] [Batch classify loss: 1.521159]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.9794,  1.6986,  5.1617,  0.5830,  1.1668,  0.9173, -0.7262, -1.9434,
         0.9954,  0.6003], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9926, device='cuda:0')
alpha_2[0]: tensor(0.0074, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 2/12] [Batch 19/47] [Batch classify loss: 1.609718]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.2560, -0.6404, -0.5851,  0.1342, -0.9672,  0.6372,  0.7459, -2.0693,
         2.4718,  1.3417], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6974, device='cuda:0')
alpha_2[0]: tensor(0.3026, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 2/12] [Batch 20/47] [Batch classify loss: 1.540488]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.1351,  2.7071, -0.6543,  0.1571,  0.6400, -0.3060, -0.6214, -0.2379,
        -0.6016, -0.9975], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5479, device='cuda:0')
alpha_2[0]: tensor(0.4521, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 2/12] [Batch 21/47] [Batch classify loss: 1.553015]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0541,  0.2979,  0.5717,  1.7888, -0.1134,  0.3124, -0.8781,  0.6625,
        -0.5766, -1.3446], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5086, device='cuda:0')
alpha_2[0]: tensor(0.4914, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 2/12] [Batch 22/47] [Batch classify loss: 1.649441]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5269,  0.5067,  0.4923,  0.4725,  0.5461,  0.2034, -0.0464, -0.2845,
        -0.0852, -0.6413], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8215, device='cuda:0')
alpha_2[0]: tensor(0.1785, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 2/12] [Batch 23/47] [Batch classify loss: 1.597073]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.7401,  4.2404,  0.5266,  2.0035, -0.8162,  1.2723, -3.0512,  6.6837,
        -2.1417, -4.1664], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8175, device='cuda:0')
alpha_2[0]: tensor(0.1825, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 2/12] [Batch 24/47] [Batch classify loss: 1.573551]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.0434,  0.4099,  0.1422,  0.9042,  0.2045, -0.0696, -0.5038, -0.7736,
        -0.1310,  0.8311], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9378, device='cuda:0')
alpha_2[0]: tensor(0.0622, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 2/12] [Batch 25/47] [Batch classify loss: 1.567058]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.4324,  3.1549, -0.5819,  0.1991,  0.9558, -0.5404, -0.8800, -0.2705,
        -0.2415, -1.6043], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 26/47] [Batch classify loss: 1.584992]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.3891,  0.5103, -0.2653,  1.0937,  0.0838,  1.3522, -0.6260, -0.1083,
        -0.4665, -0.3555], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6021, device='cuda:0')
alpha_2[0]: tensor(0.3979, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 2/12] [Batch 27/47] [Batch classify loss: 1.663323]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.3366,  3.5275, -1.6212,  0.1341,  0.0064, -0.4382, -1.6495,  1.3340,
        -0.7028, -1.6760], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 28/47] [Batch classify loss: 1.562934]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0227,  0.7261,  2.1524,  0.7382, -0.1054, -0.3049, -0.7334,  0.1037,
         0.2518, -0.5880], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8356, device='cuda:0')
alpha_2[0]: tensor(0.1644, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 2/12] [Batch 29/47] [Batch classify loss: 1.710914]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 2.0155, -0.3384,  0.2916,  0.4781, -0.0766, -0.9425,  1.3183, -0.4122,
         0.7527, -0.7807], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 2/12] [Batch 30/47] [Batch classify loss: 1.612228]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.0541,  2.7334, -0.6046, -0.2666,  0.2152, -0.4969, -0.2611,  1.0309,
        -0.1207, -0.9157], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9852, device='cuda:0')
alpha_2[0]: tensor(0.0148, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 2/12] [Batch 31/47] [Batch classify loss: 1.596346]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3780, -0.2357, -0.4466,  0.6788, -0.4944, -0.1032,  0.7722, -1.7406,
         2.1350,  0.4353], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6905, device='cuda:0')
alpha_2[0]: tensor(0.3095, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 2/12] [Batch 32/47] [Batch classify loss: 1.552843]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7535,  1.0380,  2.7414,  0.2214, -0.3075, -0.6978, -0.6113,  2.5985,
        -0.6232, -1.8843], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6988, device='cuda:0')
alpha_2[0]: tensor(0.3012, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 2/12] [Batch 33/47] [Batch classify loss: 1.642917]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.9305,  0.3238,  0.9611,  2.0997, -0.3913,  0.3877, -0.7178,  0.0222,
        -0.2422, -0.7765], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8530, device='cuda:0')
alpha_2[0]: tensor(0.1470, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 2/12] [Batch 34/47] [Batch classify loss: 1.486141]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.4583,  0.6973,  0.2659,  0.0511,  0.3421,  0.3233, -0.1385, -0.7732,
        -0.2524,  0.0828], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5595, device='cuda:0')
alpha_2[0]: tensor(0.4405, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 2/12] [Batch 35/47] [Batch classify loss: 1.607252]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5635,  0.1119,  0.2837,  0.9858, -0.2908,  0.0335, -0.1109, -1.1080,
         0.7538, -0.7086], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9804, device='cuda:0')
alpha_2[0]: tensor(0.0196, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 2/12] [Batch 36/47] [Batch classify loss: 1.568135]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2085,  0.6210,  1.5082,  1.1635,  0.1324,  0.8124, -0.7147, -0.6179,
        -0.6479, -0.8742], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9920, device='cuda:0')
alpha_2[0]: tensor(0.0080, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 2/12] [Batch 37/47] [Batch classify loss: 1.685942]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5681,  0.7170,  2.0606,  0.2513, -0.8600, -0.1747, -0.2568,  0.2650,
        -0.0025,  0.1268], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5001, device='cuda:0')
alpha_2[0]: tensor(0.4999, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 2/12] [Batch 38/47] [Batch classify loss: 1.678386]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.4128,  0.7237, -0.3324, -0.4329,  0.0566, -0.1832, -0.4751, -0.6285,
         0.0379,  0.0338], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6936, device='cuda:0')
alpha_2[0]: tensor(0.3064, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 39/47] [Batch classify loss: 1.551289]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.2776,  2.1041, -0.0714, -0.3440,  1.2394, -0.7603,  0.2327, -0.3174,
        -0.5728, -1.1021], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6637, device='cuda:0')
alpha_2[0]: tensor(0.3363, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 2/12] [Batch 40/47] [Batch classify loss: 1.592718]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.0401,  1.5809,  0.1063, -0.1147,  2.9472,  0.3006, -0.1917, -0.4184,
         0.2931, -0.1560], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5681, device='cuda:0')
alpha_2[0]: tensor(0.4319, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 2/12] [Batch 41/47] [Batch classify loss: 1.615575]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5342,  1.9803,  0.2078, -0.0137,  0.0066, -0.2428, -1.0582,  0.2115,
        -0.6414, -0.1859], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8846, device='cuda:0')
alpha_2[0]: tensor(0.1154, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 2/12] [Batch 42/47] [Batch classify loss: 1.572396]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.1417,  1.0271, -0.3945, -0.6720,  0.1695,  0.6294,  1.6198, -2.1328,
        -0.0271, -1.0400], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5240, device='cuda:0')
alpha_2[0]: tensor(0.4760, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 2/12] [Batch 43/47] [Batch classify loss: 1.619655]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7960, -0.1041,  2.9670,  1.2387, -0.2885, -0.0974, -0.8141, -0.1475,
         0.5393,  0.4137], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 2/12] [Batch 44/47] [Batch classify loss: 1.619842]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.4189,  3.1107, -0.0147,  0.1503,  0.2571, -0.7695, -1.6971, -1.5340,
         0.2850, -1.2449], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7559, device='cuda:0')
alpha_2[0]: tensor(0.2441, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 2/12] [Batch 45/47] [Batch classify loss: 1.563814]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.3465,  0.4175,  1.3343,  1.6647, -0.3176,  0.7182, -0.4460, -0.0809,
        -0.8563, -0.7113], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7182, device='cuda:0')
alpha_2[0]: tensor(0.2818, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 2/12] [Batch 46/47] [Batch classify loss: 1.610413]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([72, 8, 512])
generate_model.cle_y_train.shape: torch.Size([72, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([72, 8, 512])
projected_w_set_y.shape:  torch.Size([72, 8, 10])
inputs.shape: torch.Size([72, 3, 32, 32])
targets.shape: torch.Size([72, 10])
batch_outputs[0]: tensor([ 2.1374,  0.8069,  0.1127, -1.1915, -0.0695, -0.8075,  0.6557, -0.7177,
         0.2423, -0.7077], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6024, device='cuda:0')
alpha_2[0]: tensor(0.3976, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 2/12] [Batch 47/47] [Batch classify loss: 1.431700]
0002 epoch rmt trained classifier accuary on the clean testing examples:89.1211%
0002 epoch rmt trained classifier loss on the clean testing examples:0.8001
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
generating testset adversarial examples...
finished generate testset adversarial examples !
0002 epoch rmt trained classifier accuary on adversarial testset:34.5959%
0002 epoch rmt trained classifier loss on adversarial testset:2.098517656326294
tensorboard_log_dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00003/rmt-svhn-dataset/tensorboard-log-run-acc-adv
tensorboard_log_dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00003/rmt-svhn-dataset/tensorboard-log-run-acc-cle
2epoch learning rate:0.01
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.2820,  3.3710,  0.9179, -0.3593,  0.0859, -0.7899, -1.6302, -0.2375,
        -0.2010, -1.1757], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 1/47] [Batch classify loss: 1.379327]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.4668,  0.9567,  0.0967, -0.0479,  0.8052, -0.0261,  2.7498, -1.1925,
        -0.7432, -0.4959], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5556, device='cuda:0')
alpha_2[0]: tensor(0.4444, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 2/47] [Batch classify loss: 1.323566]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5720, -0.2237, -0.0621,  0.6105, -0.2828, -0.0569,  0.6240, -1.6059,
         0.9134, -0.6412], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5520, device='cuda:0')
alpha_2[0]: tensor(0.4480, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 3/12] [Batch 3/47] [Batch classify loss: 1.357928]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.1188,  0.9488,  0.0307,  0.3584, -0.3706,  0.0069,  0.8589, -1.5350,
        -0.0251, -0.6500], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8373, device='cuda:0')
alpha_2[0]: tensor(0.1627, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 3/12] [Batch 4/47] [Batch classify loss: 1.457402]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5577,  0.6813, -0.1536, -0.4008,  1.6005,  1.1148,  1.3401, -2.2840,
        -1.1835, -1.0294], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6075, device='cuda:0')
alpha_2[0]: tensor(0.3925, device='cuda:0')
w1_label_index[0]: tensor(6, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 3/12] [Batch 5/47] [Batch classify loss: 1.477207]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0361,  0.0837,  0.5846,  2.4762,  1.2439, -0.4657, -1.5259,  4.3881,
        -0.7844, -1.1007], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 6/47] [Batch classify loss: 1.448085]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.6147,  2.7763,  0.5554, -0.5091, -0.3053, -0.0901, -1.5869, -0.3081,
        -1.3185,  0.8439], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 7/47] [Batch classify loss: 1.365159]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.5342,  0.4866, -1.4915,  2.7944, -0.8945,  5.3497, -0.1699, -0.7521,
        -1.3728, -1.2918], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9071, device='cuda:0')
alpha_2[0]: tensor(0.0929, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 8/47] [Batch classify loss: 1.430359]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.6019,  0.4686,  2.0716,  0.8538, -0.4292, -0.3960, -1.1985,  0.0588,
        -0.0109,  0.2412], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6784, device='cuda:0')
alpha_2[0]: tensor(0.3216, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 9/47] [Batch classify loss: 1.440881]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.4880,  1.9882, -0.8952, -0.8872,  4.0404, -0.5844,  0.2143, -1.9466,
        -0.6873,  0.5316], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5496, device='cuda:0')
alpha_2[0]: tensor(0.4504, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 10/47] [Batch classify loss: 1.364459]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0451e+00,  2.6805e-01,  9.3879e-01,  9.5397e-01, -9.2551e-04,
        -1.6836e-01, -3.4904e-01,  8.6909e-01, -4.5874e-01, -9.6024e-02],
       device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7143, device='cuda:0')
alpha_2[0]: tensor(0.2857, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 11/47] [Batch classify loss: 1.355878]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.6460,  0.4523, -0.7318,  0.1880, -0.7200,  2.1092,  0.1694, -1.1249,
         0.0980, -0.3879], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9313, device='cuda:0')
alpha_2[0]: tensor(0.0687, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 3/12] [Batch 12/47] [Batch classify loss: 1.458868]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 2.0483,  0.6351, -0.4333, -0.2893,  0.1173, -0.7359, -0.1394, -1.9464,
         0.0957,  1.5653], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7215, device='cuda:0')
alpha_2[0]: tensor(0.2785, device='cuda:0')
w1_label_index[0]: tensor(6, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 13/47] [Batch classify loss: 1.405584]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.2185,  0.4316,  0.0906, -0.0661,  0.1464, -0.9674, -0.0820, -0.9715,
        -0.3757,  0.5746], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5913, device='cuda:0')
alpha_2[0]: tensor(0.4087, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 14/47] [Batch classify loss: 1.468288]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2747,  0.2945,  3.6084,  0.7192,  0.3690, -0.5375, -1.0064, -0.5783,
         0.5708,  0.2649], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8728, device='cuda:0')
alpha_2[0]: tensor(0.1272, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 15/47] [Batch classify loss: 1.326539]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 3.0828,  1.6731, -1.4852, -1.5997,  0.9566, -1.8270,  1.8754, -3.0995,
         0.1675,  0.0972], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7110, device='cuda:0')
alpha_2[0]: tensor(0.2890, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 3/12] [Batch 16/47] [Batch classify loss: 1.610904]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.3796,  0.7337,  0.2110, -0.4790,  0.1888,  2.8520, -0.4512, -0.7559,
        -0.7308, -0.7285], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8300, device='cuda:0')
alpha_2[0]: tensor(0.1700, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 3/12] [Batch 17/47] [Batch classify loss: 1.507764]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.4175,  3.0917,  0.0613, -0.2287, -0.1853, -0.8395, -1.1434, -0.2576,
        -0.4032, -1.1765], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6821, device='cuda:0')
alpha_2[0]: tensor(0.3179, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 3/12] [Batch 18/47] [Batch classify loss: 1.548072]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.5759,  1.2507,  0.5065,  0.5108,  0.4662,  0.1454, -1.8970,  3.2652,
        -0.4820, -0.4630], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8190, device='cuda:0')
alpha_2[0]: tensor(0.1810, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 3/12] [Batch 19/47] [Batch classify loss: 1.510929]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.1222,  0.1493,  1.1050,  1.8386,  0.3511, -0.0262, -0.9483,  1.6692,
         0.2457, -0.6832], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5527, device='cuda:0')
alpha_2[0]: tensor(0.4473, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 20/47] [Batch classify loss: 1.455039]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8111,  1.0444,  0.6191,  0.2818, -0.3698, -0.8923, -0.6361,  2.3616,
        -0.3506, -1.6503], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8682, device='cuda:0')
alpha_2[0]: tensor(0.1318, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 3/12] [Batch 21/47] [Batch classify loss: 1.560357]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.2066,  0.3114,  1.0126,  1.1884, -0.1814, -0.6635, -0.8262, -1.0001,
         0.4033,  0.6754], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9915, device='cuda:0')
alpha_2[0]: tensor(0.0085, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 22/47] [Batch classify loss: 1.462349]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.6173,  1.6423, -0.4608, -0.0046, -0.5636, -0.9294, -0.7838,  0.1175,
         0.4367,  3.5684], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6990, device='cuda:0')
alpha_2[0]: tensor(0.3010, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 3/12] [Batch 23/47] [Batch classify loss: 1.533264]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8493,  1.9146, -0.6020, -0.8329,  0.0317,  0.4493,  1.0138,  0.7205,
        -0.7323, -1.1859], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5858, device='cuda:0')
alpha_2[0]: tensor(0.4142, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 3/12] [Batch 24/47] [Batch classify loss: 1.484826]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8405,  0.5167, -0.3151,  0.0896,  0.0689,  1.3673,  1.5897, -1.4107,
        -0.5063, -1.0058], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5558, device='cuda:0')
alpha_2[0]: tensor(0.4442, device='cuda:0')
w1_label_index[0]: tensor(6, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 3/12] [Batch 25/47] [Batch classify loss: 1.442808]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2901,  0.1321,  0.2307,  1.1266, -1.0997,  0.9589,  0.6569, -2.4845,
         3.5474, -1.5841], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9795, device='cuda:0')
alpha_2[0]: tensor(0.0205, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 26/47] [Batch classify loss: 1.527682]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5772,  0.7305,  0.8087,  1.2213,  0.4177,  0.7052, -1.1217,  1.2684,
        -0.6842, -0.3748], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5618, device='cuda:0')
alpha_2[0]: tensor(0.4382, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 27/47] [Batch classify loss: 1.490546]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0633,  0.9502,  0.8585,  0.9867,  0.4059,  0.4461, -0.6536, -0.9553,
        -0.2474, -0.4152], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5889, device='cuda:0')
alpha_2[0]: tensor(0.4111, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 28/47] [Batch classify loss: 1.497179]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.0779,  0.2518, -0.3195, -0.3944, -0.1139,  1.0561,  2.0088, -2.0330,
        -0.7756, -1.1723], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8712, device='cuda:0')
alpha_2[0]: tensor(0.1288, device='cuda:0')
w1_label_index[0]: tensor(6, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 3/12] [Batch 29/47] [Batch classify loss: 1.498702]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8011,  2.2413,  0.1000,  0.0141,  4.4986,  0.9854, -0.4999, -1.8387,
        -0.2778,  1.3386], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8411, device='cuda:0')
alpha_2[0]: tensor(0.1589, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 3/12] [Batch 30/47] [Batch classify loss: 1.523326]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2279,  0.8354,  0.1625, -0.6752,  0.0699,  1.7344,  0.0463, -0.7678,
        -0.7716, -0.3776], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5533, device='cuda:0')
alpha_2[0]: tensor(0.4467, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 3/12] [Batch 31/47] [Batch classify loss: 1.459532]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5175,  0.6706,  0.5654,  0.9464, -0.3892,  1.5641,  0.1836, -0.3967,
        -1.0544, -1.3983], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5964, device='cuda:0')
alpha_2[0]: tensor(0.4036, device='cuda:0')
w1_label_index[0]: tensor(7, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 3/12] [Batch 32/47] [Batch classify loss: 1.381251]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.6950,  0.2789,  1.3227,  0.1836,  0.1652,  0.0793, -0.0695, -1.3735,
        -0.0882,  0.3969], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5626, device='cuda:0')
alpha_2[0]: tensor(0.4374, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 3/12] [Batch 33/47] [Batch classify loss: 1.617447]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2344,  0.7119,  0.0549,  0.7496,  0.1968,  0.9720,  0.0614, -1.0757,
         0.1506, -1.3115], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7196, device='cuda:0')
alpha_2[0]: tensor(0.2804, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 3/12] [Batch 34/47] [Batch classify loss: 1.507524]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.4896,  1.3854, -0.1320,  0.3223,  0.1576, -0.1923, -0.5125,  0.2203,
        -0.1298, -0.6955], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6278, device='cuda:0')
alpha_2[0]: tensor(0.3722, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 3/12] [Batch 35/47] [Batch classify loss: 1.597667]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7128,  1.4308,  0.7847, -0.2617, -0.1466,  0.2277, -0.9201,  0.2413,
        -0.9320,  0.2467], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7449, device='cuda:0')
alpha_2[0]: tensor(0.2551, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 3/12] [Batch 36/47] [Batch classify loss: 1.557577]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2892,  0.4554,  0.1627,  4.4167, -0.6851,  0.7697, -0.2312, -1.0428,
         0.4224, -0.6784], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8489, device='cuda:0')
alpha_2[0]: tensor(0.1511, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 3/12] [Batch 37/47] [Batch classify loss: 1.498133]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.1955,  0.0766,  1.2403,  2.7756, -0.8568,  1.2301, -0.3206,  0.2834,
         0.1849, -0.5551], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9999, device='cuda:0')
alpha_2[0]: tensor(0.0001, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 3/12] [Batch 38/47] [Batch classify loss: 1.499786]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.1874,  0.1848, -0.6217, -1.1206, -0.2989,  0.3307,  2.3855, -1.9323,
         0.1022, -0.5972], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9012, device='cuda:0')
alpha_2[0]: tensor(0.0988, device='cuda:0')
w1_label_index[0]: tensor(6, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 3/12] [Batch 39/47] [Batch classify loss: 1.498529]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.3325,  3.2992,  0.4644, -0.0290,  0.7401,  0.1117, -0.9923, -0.3674,
        -0.7954, -0.4688], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 40/47] [Batch classify loss: 1.502280]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.0080,  1.1933,  0.2131,  0.5531,  1.3689, -0.4249, -1.2364,  0.0085,
        -0.7917, -0.3411], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8310, device='cuda:0')
alpha_2[0]: tensor(0.1690, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 3/12] [Batch 41/47] [Batch classify loss: 1.455580]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.6824,  0.2253,  0.2139,  2.5055, -0.0281,  1.9393, -0.4623, -0.1754,
        -0.3390, -1.5965], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8952, device='cuda:0')
alpha_2[0]: tensor(0.1048, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 42/47] [Batch classify loss: 1.520355]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.3084,  0.4209,  1.1238,  2.7458, -0.5346,  1.3474, -0.3418,  0.2585,
        -0.1482, -1.1261], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9519, device='cuda:0')
alpha_2[0]: tensor(0.0481, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 3/12] [Batch 43/47] [Batch classify loss: 1.444686]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.9811,  1.2781, -0.0980,  0.6657,  0.3668,  1.2920, -0.7660, -0.2691,
        -1.0666, -0.5411], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7735, device='cuda:0')
alpha_2[0]: tensor(0.2265, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 3/12] [Batch 44/47] [Batch classify loss: 1.553407]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.4318,  0.0577, -0.5234,  1.5930,  0.0619,  3.2443, -0.2706, -0.8740,
         0.6521, -1.2392], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9379, device='cuda:0')
alpha_2[0]: tensor(0.0621, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 3/12] [Batch 45/47] [Batch classify loss: 1.455906]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5063,  0.5252,  1.1487,  0.2830, -0.1120, -0.4706, -0.0951,  2.1601,
        -1.2542, -0.6319], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6500, device='cuda:0')
alpha_2[0]: tensor(0.3500, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 3/12] [Batch 46/47] [Batch classify loss: 1.434510]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([72, 8, 512])
generate_model.cle_y_train.shape: torch.Size([72, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([72, 8, 512])
projected_w_set_y.shape:  torch.Size([72, 8, 10])
inputs.shape: torch.Size([72, 3, 32, 32])
targets.shape: torch.Size([72, 10])
batch_outputs[0]: tensor([ 0.0875,  1.3133, -1.2202, -1.2291,  3.2891, -0.1015, -0.1480, -0.9741,
        -0.3972,  1.4017], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8230, device='cuda:0')
alpha_2[0]: tensor(0.1770, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(0, device='cuda:0')
[Epoch 3/12] [Batch 47/47] [Batch classify loss: 1.643404]
0003 epoch rmt trained classifier accuary on the clean testing examples:84.3616%
0003 epoch rmt trained classifier loss on the clean testing examples:0.8067
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.2
generating testset adversarial examples...
finished generate testset adversarial examples !
0003 epoch rmt trained classifier accuary on adversarial testset:33.3781%
0003 epoch rmt trained classifier loss on adversarial testset:2.203671455383301
tensorboard_log_dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00003/rmt-svhn-dataset/tensorboard-log-run-acc-adv
tensorboard_log_dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-uniformsampler/alexnet-svhn/20210920/00003/rmt-svhn-dataset/tensorboard-log-run-acc-cle
3epoch learning rate:0.01
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3683,  3.2064, -0.1650, -0.4618,  0.9449, -0.5749, -0.4246, -0.3127,
        -0.8292, -0.8315], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 4/12] [Batch 1/47] [Batch classify loss: 1.174884]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.2989,  3.5482, -0.1613, -1.1116, -0.4344, -0.7051, -0.7647,  0.4446,
        -0.8161, -0.6835], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 4/12] [Batch 2/47] [Batch classify loss: 1.127721]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.9038,  0.7364,  3.4816,  0.1637,  0.0291,  0.7621, -1.2819, -1.2497,
         0.0397,  0.5443], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9902, device='cuda:0')
alpha_2[0]: tensor(0.0098, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 4/12] [Batch 3/47] [Batch classify loss: 1.138235]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8303,  2.3409,  5.7001,  0.6457, -0.6056, -1.2879, -1.9422, -1.1321,
        -0.8248,  0.8686], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9042, device='cuda:0')
alpha_2[0]: tensor(0.0958, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 4/12] [Batch 4/47] [Batch classify loss: 1.134696]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.9184,  2.1130, -0.0572, -0.5418,  0.6935, -0.0064, -0.2515, -0.1631,
        -0.9623, -0.5956], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6540, device='cuda:0')
alpha_2[0]: tensor(0.3460, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 5/47] [Batch classify loss: 1.298347]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8624,  0.1487, -0.5263,  0.3719, -1.0349, -0.0159,  0.3426, -1.5075,
         3.3794, -0.9912], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7434, device='cuda:0')
alpha_2[0]: tensor(0.2566, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 6/47] [Batch classify loss: 1.300125]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8484,  2.2588, -1.3693, -0.6337,  5.8672,  1.1114, -0.7214, -2.2625,
        -0.3074, -0.9224], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9639, device='cuda:0')
alpha_2[0]: tensor(0.0361, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 4/12] [Batch 7/47] [Batch classify loss: 1.306869]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.1193,  1.1186,  3.9253,  0.0471, -0.1052, -0.5518, -0.9572, -0.8848,
         0.2069,  0.7248], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 4/12] [Batch 8/47] [Batch classify loss: 1.272240]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8136, -0.0358,  0.3169,  0.7167, -0.8513, -0.0808, -0.3565, -1.7122,
         4.1736, -0.9443], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8326, device='cuda:0')
alpha_2[0]: tensor(0.1674, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 4/12] [Batch 9/47] [Batch classify loss: 1.264790]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.3719,  1.2957, -0.0212,  1.0631, -0.3418,  1.8637, -0.7554, -0.7002,
        -0.9267, -0.8039], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6560, device='cuda:0')
alpha_2[0]: tensor(0.3440, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 10/47] [Batch classify loss: 1.274534]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.9427,  3.2400, -0.0687, -0.1179,  0.1916,  0.4017, -1.0927, -0.3553,
        -1.8809, -0.4812], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5784, device='cuda:0')
alpha_2[0]: tensor(0.4216, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 11/47] [Batch classify loss: 1.166990]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0892,  0.1665, -0.1276,  0.6350, -0.3823, -0.8635, -0.4162, -1.4745,
         3.8939, -0.0717], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8309, device='cuda:0')
alpha_2[0]: tensor(0.1691, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 12/47] [Batch classify loss: 1.373636]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.9013,  0.3055,  0.6730,  2.7955,  0.1228,  0.7060, -1.1536, -0.0440,
        -0.2073, -1.0563], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7781, device='cuda:0')
alpha_2[0]: tensor(0.2219, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 4/12] [Batch 13/47] [Batch classify loss: 1.363122]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.2142,  2.4666, -0.1593,  0.0468,  0.4347, -0.1792, -0.5111, -0.9899,
        -0.6490, -0.3881], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7022, device='cuda:0')
alpha_2[0]: tensor(0.2978, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 4/12] [Batch 14/47] [Batch classify loss: 1.276119]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.0470,  0.8474,  1.3035,  2.8584, -0.1761,  0.5723, -1.4900, -0.1111,
        -0.9286, -1.4532], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6175, device='cuda:0')
alpha_2[0]: tensor(0.3825, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 15/47] [Batch classify loss: 1.299368]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3357,  1.4963, -0.0342, -0.6660,  1.4228, -0.4480, -1.2448, -0.3215,
        -1.4205,  1.2474], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 16/47] [Batch classify loss: 1.261356]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.7397,  0.9552,  5.5567,  1.0028,  0.3021, -0.0931, -2.3273, -0.5129,
        -1.1373,  0.2347], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5675, device='cuda:0')
alpha_2[0]: tensor(0.4325, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 17/47] [Batch classify loss: 1.367084]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.0230,  0.2980,  0.3960, -0.0297, -0.4261, -0.8697, -0.2531, -1.1018,
        -0.2002,  0.8929], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5680, device='cuda:0')
alpha_2[0]: tensor(0.4320, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 18/47] [Batch classify loss: 1.291449]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3434,  0.7162,  0.9158,  0.9166, -1.4010, -0.2136, -2.6331, -1.1412,
         0.0108,  6.6936], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9219, device='cuda:0')
alpha_2[0]: tensor(0.0781, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(6, device='cuda:0')
[Epoch 4/12] [Batch 19/47] [Batch classify loss: 1.383104]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3951, -0.0781, -0.1409,  0.0882,  1.7196, -0.8101,  0.3011, -1.4099,
         0.7690, -0.3072], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7193, device='cuda:0')
alpha_2[0]: tensor(0.2807, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 20/47] [Batch classify loss: 1.296318]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.7974,  0.8235, -0.2473,  5.6709, -0.4092,  0.3393, -3.0837, -1.4940,
         1.3251, -1.0052], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9876, device='cuda:0')
alpha_2[0]: tensor(0.0124, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 4/12] [Batch 21/47] [Batch classify loss: 1.310982]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5159,  0.0437,  1.4119,  1.9982,  0.6580,  0.1235, -1.0284, -0.5641,
        -0.6224, -0.5690], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7044, device='cuda:0')
alpha_2[0]: tensor(0.2956, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 22/47] [Batch classify loss: 1.233945]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.8434,  0.1634,  1.8867,  1.5421,  0.2031, -0.2773, -0.9458, -0.9402,
         0.0802,  0.1562], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7228, device='cuda:0')
alpha_2[0]: tensor(0.2772, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 23/47] [Batch classify loss: 1.204661]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.1834,  0.1581,  1.2044,  0.1392, -0.0881, -0.4305, -0.8081, -0.6355,
        -0.3691,  1.6610], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8493, device='cuda:0')
alpha_2[0]: tensor(0.1507, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 4/12] [Batch 24/47] [Batch classify loss: 1.288281]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-3.0000,  0.2541,  1.6064,  3.0272, -0.5204,  0.0031, -1.4229, -0.5291,
         0.4787, -0.6582], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9907, device='cuda:0')
alpha_2[0]: tensor(0.0093, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 4/12] [Batch 25/47] [Batch classify loss: 1.453029]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5042e+00,  1.1286e+00, -1.4457e-01,  3.2471e-01,  9.6443e-04,
         7.5753e-01,  3.8813e-01, -1.2074e+00, -4.5361e-01, -3.4335e-01],
       device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6922, device='cuda:0')
alpha_2[0]: tensor(0.3078, device='cuda:0')
w1_label_index[0]: tensor(6, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 26/47] [Batch classify loss: 1.364859]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.4553,  0.2267, -0.3615,  1.2714, -0.4872,  1.2487,  0.0929, -0.9793,
         0.4906, -0.9620], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 27/47] [Batch classify loss: 1.335890]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.0703,  4.1099,  0.7480, -0.2237,  0.1333, -0.5300, -2.3199, -0.1131,
        -0.3765, -0.8019], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8751, device='cuda:0')
alpha_2[0]: tensor(0.1249, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 4/12] [Batch 28/47] [Batch classify loss: 1.404592]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.1920, -0.1038,  0.3437,  1.0959, -0.6009, -0.3215, -0.2264, -0.8914,
         1.1199,  0.2224], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6088, device='cuda:0')
alpha_2[0]: tensor(0.3912, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 4/12] [Batch 29/47] [Batch classify loss: 1.319626]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8620,  0.1520,  0.5048, -0.2443,  1.0673,  0.6939,  0.3307, -0.8228,
        -0.5782, -0.9258], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9796, device='cuda:0')
alpha_2[0]: tensor(0.0204, device='cuda:0')
w1_label_index[0]: tensor(5, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 4/12] [Batch 30/47] [Batch classify loss: 1.389062]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.7109,  2.0762, -0.6301, -0.0302,  4.8800,  0.4464, -0.2321, -1.7176,
        -0.5783,  0.3501], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9463, device='cuda:0')
alpha_2[0]: tensor(0.0537, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 4/12] [Batch 31/47] [Batch classify loss: 1.294892]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3930, -0.2288,  1.0648, -0.3800,  0.5801, -0.9127, -0.2148, -1.5445,
         0.2907,  0.8812], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.7583, device='cuda:0')
alpha_2[0]: tensor(0.2417, device='cuda:0')
w1_label_index[0]: tensor(9, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 32/47] [Batch classify loss: 1.316165]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.9595,  0.5640, -0.0494,  5.1668, -0.7054,  1.6700, -2.0325, -0.8098,
         0.3998, -1.1393], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 4/12] [Batch 33/47] [Batch classify loss: 1.297436]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.3685,  1.4057, -0.8481, -0.3781,  1.1518,  0.0271,  0.1033, -1.4057,
        -0.4363,  0.2868], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6022, device='cuda:0')
alpha_2[0]: tensor(0.3978, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 34/47] [Batch classify loss: 1.401553]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0903,  1.7886,  0.4097, -0.1842, -0.4078, -0.4535,  0.0156, -0.9159,
        -0.5409, -0.4249], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5356, device='cuda:0')
alpha_2[0]: tensor(0.4644, device='cuda:0')
w1_label_index[0]: tensor(3, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 4/12] [Batch 35/47] [Batch classify loss: 1.394738]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.5030,  0.7079, -0.6807,  1.0993, -0.2095,  2.3512, -0.5254, -1.0934,
        -0.2360, -0.8559], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5297, device='cuda:0')
alpha_2[0]: tensor(0.4703, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(5, device='cuda:0')
[Epoch 4/12] [Batch 36/47] [Batch classify loss: 1.327746]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 1.4669,  0.3503,  0.3510,  2.1739,  0.1006, -1.0856, -2.1042, -1.1459,
        -0.1673, -0.5568], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8117, device='cuda:0')
alpha_2[0]: tensor(0.1883, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 37/47] [Batch classify loss: 1.438941]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.8581,  0.5316,  3.9223,  0.8146, -0.6292,  0.0352, -1.2203,  0.9755,
        -0.7871, -0.8221], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9616, device='cuda:0')
alpha_2[0]: tensor(0.0384, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(4, device='cuda:0')
[Epoch 4/12] [Batch 38/47] [Batch classify loss: 1.321698]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.4167,  0.6194,  1.4859, -0.1950,  0.0712, -0.6817, -0.4862, -0.7706,
        -0.6501,  0.6628], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6746, device='cuda:0')
alpha_2[0]: tensor(0.3254, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 4/12] [Batch 39/47] [Batch classify loss: 1.360065]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.5162,  0.0820,  2.5075,  0.5111,  0.3388, -0.6283, -0.3791, -1.6689,
        -0.2091,  0.7425], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6283, device='cuda:0')
alpha_2[0]: tensor(0.3717, device='cuda:0')
w1_label_index[0]: tensor(2, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 4/12] [Batch 40/47] [Batch classify loss: 1.361705]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.2293,  1.4477, -0.3226, -0.3824,  2.0668, -0.3448, -0.4087, -0.1695,
        -1.3125, -0.6305], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.8229, device='cuda:0')
alpha_2[0]: tensor(0.1771, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(3, device='cuda:0')
[Epoch 4/12] [Batch 41/47] [Batch classify loss: 1.304448]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-2.0612,  3.0946,  0.9876, -0.9114, -0.0684, -0.6909, -1.2653, -0.3604,
        -0.0355, -0.5048], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9472, device='cuda:0')
alpha_2[0]: tensor(0.0528, device='cuda:0')
w1_label_index[0]: tensor(1, device='cuda:0')
w2_label_index[0]: tensor(7, device='cuda:0')
[Epoch 4/12] [Batch 42/47] [Batch classify loss: 1.361853]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-1.0814,  1.0080, -0.1272, -0.5234,  0.5762,  0.7464, -0.3087, -0.2959,
        -0.3566,  0.0138], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.6706, device='cuda:0')
alpha_2[0]: tensor(0.3294, device='cuda:0')
w1_label_index[0]: tensor(0, device='cuda:0')
w2_label_index[0]: tensor(2, device='cuda:0')
[Epoch 4/12] [Batch 43/47] [Batch classify loss: 1.365411]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([ 0.6115,  0.2466, -0.1774, -0.4645,  1.0131, -0.4601,  0.2699, -1.3329,
        -0.3126,  0.5180], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.5931, device='cuda:0')
alpha_2[0]: tensor(0.4069, device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(1, device='cuda:0')
[Epoch 4/12] [Batch 44/47] [Batch classify loss: 1.412948]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.8572, -0.2181,  1.2023,  0.1777, -0.7289, -0.6680, -0.0321, -1.7782,
         2.6929, -0.3130], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(1., device='cuda:0')
alpha_2[0]: tensor(0., device='cuda:0')
w1_label_index[0]: tensor(8, device='cuda:0')
w2_label_index[0]: tensor(8, device='cuda:0')
[Epoch 4/12] [Batch 45/47] [Batch classify loss: 1.302771]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([256, 8, 512])
generate_model.cle_y_train.shape: torch.Size([256, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([256, 8, 512])
projected_w_set_y.shape:  torch.Size([256, 8, 10])
inputs.shape: torch.Size([256, 3, 32, 32])
targets.shape: torch.Size([256, 10])
batch_outputs[0]: tensor([-0.1832,  0.8092,  0.4615, -0.2431,  2.5202, -0.1329, -0.0520, -0.2549,
        -0.6732, -1.4234], device='cuda:0', grad_fn=<SelectBackward>)
alpha_1[0]: tensor(0.9808, device='cuda:0')
alpha_2[0]: tensor(0.0192, device='cuda:0')
w1_label_index[0]: tensor(4, device='cuda:0')
w2_label_index[0]: tensor(9, device='cuda:0')
[Epoch 4/12] [Batch 46/47] [Batch classify loss: 1.343297]
gen_network_pkl:  /home/maggie/mmat/result/train/gen-train/stylegan2ada-svhn/20210718/00000/svhn-auto1-batch64-ada-bgc-noresume/network-snapshot-025000.pkl
generate_model.cle_w_train.shape: torch.Size([72, 8, 512])
generate_model.cle_y_train.shape: torch.Size([72, 8])
running interpolate main()..............
Interpolate projectors from projectors numpy ndarray !
/home/maggie/mmat/genmodels/stylegan2ada.py:1168: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_x = torch.tensor(self.projected_w_set).to(device)                                                       #   numpy -> tensor
/home/maggie/mmat/genmodels/stylegan2ada.py:1169: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  projected_w_set_y = torch.tensor(self.projected_y_set).to(device)                                                       #   numpy数组里是int型label编号，要转成one hot
projected_w_set_x.shape:  torch.Size([72, 8, 512])
projected_w_set_y.shape:  torch.Size([72, 8, 10])
Traceback (most recent call last):
  File "tasklauncher-20210920.py", line 161, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train,cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1365, in rmt
    print("inputs.shape:",inputs.shape)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1741, in mixup_data
    
  File "/home/maggie/mmat/genmodels/mixgenerate.py", line 484, in generate
    self._model.generate(self._exp_result_dir)
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1848, in generate
    if os.path.splitext(name)[-1] == '.npz':
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1859, in __generatemain__
    label_npz_paths.append(f'{opt.projected_dataset}/{name}')
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1936, in __generatefromntensor__
    truncation_psi = opt.truncation_psi,
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1961, in __imagegeneratefromwset__
    return generated_x_set, generated_y_set
  File "/home/maggie/mmat/utils/stylegan2ada/legacy.py", line 25, in load_network_pkl
    data = _LegacyUnpickler(f).load()
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/storage.py", line 160, in _load_from_bytes
    def _load_from_bytes(b):
KeyboardInterrupt
