

---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20220715
Experiment result save dir: /home/data/maggie/result-newhome/project/stylegan2ada-svhn/20220715/00000
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
projecting training set
self._args.dataset: svhn
sample_num: 73257
batch_num: 2290
batch_size: 32
Projecting *svhn* 0/2290 batch data sets...
running projecting main()..............
Project original images from images tensor set !
projecting samples num: 32
projecting 00000000 image:
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
label = 0001-1
projecting samples num: 32
projecting 00000001 image:
label = 0009-9
projecting samples num: 32
projecting 00000002 image:
label = 0002-2
projecting samples num: 32
projecting 00000003 image:
label = 0003-3
projecting samples num: 32
projecting 00000004 image:
Traceback (most recent call last):
  File "tasklauncher-20220713.py", line 182, in <module>
    generate_model.projectmain(cle_train_dataloader) 
  File "/home/maggie/mmat/genmodels/mixgenerate.py", line 228, in projectmain
    pro_w_trainbatch, pro_y_trainbatch = self.__batchproject__(batch_index,cle_x_trainbatch, cle_y_trainbatch)                                 #   numpy
  File "/home/maggie/mmat/genmodels/mixgenerate.py", line 428, in __batchproject__
    self._model.project(self._exp_result_dir,cle_x_trainbatch,cle_y_trainbatch,batch_index)         #   调用stylegan2ada的project
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 528, in project
    projected_w_set, projected_y_set = self.__projectmain__(self._args, self._exp_result_dir,ori_x_set, ori_y_set)
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 539, in __projectmain__
    projected_w_set, projected_y_set = self.__ramxyproject__()
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 632, in __ramxyproject__
    laber_index = target_y_set[index]
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 702, in __xyproject__
    verbose=True
  File "/home/maggie/mmat/genmodels/stylegan2ada.py", line 1106, in __project__
    loss.backward()
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/tensor.py", line 245, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/autograd/__init__.py", line 147, in backward
    allow_unreachable=True, accumulate_grad=True)  # allow_unreachable flag
KeyboardInterrupt


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20220715
Experiment result save dir: /home/data/maggie/result-newhome/project/stylegan2ada-svhn/20220715/00000
initilize the dataset loading parameters
Using downloaded and verified file: /home/data/maggie/svhn/train_32x32.mat
Loading *svhn* train dataloader finished !
Loading *svhn* test dataloader finished !
projecting training set
self._args.dataset: svhn
sample_num: 73257
batch_num: 2290
batch_size: 32
Projecting *svhn* 0/2290 batch data sets...
running projecting main()..............
Project original images from images tensor set !
projecting samples num: 32
projecting 00000000 image:
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
label = 0001-1
projecting samples num: 32
projecting 00000001 image:
label = 0009-9
projecting samples num: 32
projecting 00000002 image:
label = 0002-2
projecting samples num: 32
projecting 00000003 image:
label = 0003-3
projecting samples num: 32
projecting 00000004 image:
label = 0002-2
projecting samples num: 32
projecting 00000005 image:
label = 0005-5
projecting samples num: 32
projecting 00000006 image:
label = 0009-9
projecting samples num: 32
projecting 00000007 image:
label = 0003-3
projecting samples num: 32
projecting 00000008 image:
label = 0003-3
projecting samples num: 32
projecting 00000009 image:
label = 0001-1
projecting samples num: 32
projecting 00000010 image:
label = 0003-3
projecting samples num: 32
projecting 00000011 image:
label = 0003-3
projecting samples num: 32
projecting 00000012 image:
label = 0002-2
projecting samples num: 32
projecting 00000013 image:
label = 0008-8
projecting samples num: 32
projecting 00000014 image:
label = 0007-7
projecting samples num: 32
projecting 00000015 image:
label = 0004-4
projecting samples num: 32
projecting 00000016 image:
label = 0004-4
projecting samples num: 32
projecting 00000017 image:
label = 0001-1
projecting samples num: 32
projecting 00000018 image:
label = 0002-2
projecting samples num: 32
projecting 00000019 image:
label = 0008-8
projecting samples num: 32
projecting 00000020 image:
label = 0001-1
projecting samples num: 32
projecting 00000021 image:
label = 0006-6
projecting samples num: 32
projecting 00000022 image:
label = 0002-2
projecting samples num: 32
projecting 00000023 image:
label = 0003-3
projecting samples num: 32
projecting 00000024 image:
label = 0006-6
projecting samples num: 32
projecting 00000025 image:
label = 0003-3
projecting samples num: 32
projecting 00000026 image:
label = 0004-4
projecting samples num: 32
projecting 00000027 image:
label = 0002-2
projecting samples num: 32
projecting 00000028 image:
label = 0005-5
projecting samples num: 32
projecting 00000029 image:
label = 0008-8
projecting samples num: 32
projecting 00000030 image:
label = 0001-1
projecting samples num: 32
projecting 00000031 image:
label = 0006-6
Finished dataset projecting !
pro_w_train.shape: torch.Size([32, 8, 512])
pro_y_train.shape: torch.Size([32, 8])
Projecting *svhn* 1/2290 batch data sets...
running projecting main()..............
Project original images from images tensor set !
projecting samples num: 32
projecting 00000032 image:
label = 0002-2
projecting samples num: 32
projecting 00000033 image:
label = 0003-3
projecting samples num: 32
projecting 00000034 image:
label = 0007-7
projecting samples num: 32
projecting 00000035 image:
label = 0009-9
projecting samples num: 32
projecting 00000036 image:
label = 0005-5
projecting samples num: 32
projecting 00000037 image:
label = 0003-3
projecting samples num: 32
projecting 00000038 image:
label = 0002-2
projecting samples num: 32
projecting 00000039 image:
label = 0002-2
projecting samples num: 32
projecting 00000040 image:
label = 0002-2
projecting samples num: 32
projecting 00000041 image:
label = 0006-6
projecting samples num: 32
projecting 00000042 image:
label = 0002-2
projecting samples num: 32
projecting 00000043 image:
label = 0002-2
projecting samples num: 32
projecting 00000044 image:
label = 0005-5
projecting samples num: 32
projecting 00000045 image:
label = 0001-1
projecting samples num: 32
projecting 00000046 image:
label = 0005-5
projecting samples num: 32
projecting 00000047 image:
label = 0004-4
projecting samples num: 32
projecting 00000048 image:
label = 0007-7
projecting samples num: 32
projecting 00000049 image:
label = 0008-8
projecting samples num: 32
projecting 00000050 image:
label = 0009-9
projecting samples num: 32
projecting 00000051 image:
label = 0006-6
projecting samples num: 32
projecting 00000052 image:
label = 0000-0
projecting samples num: 32
projecting 00000053 image:
label = 0001-1
projecting samples num: 32
projecting 00000054 image:
label = 0002-2
projecting samples num: 32
projecting 00000055 image:
label = 0004-4
projecting samples num: 32
projecting 00000056 image:
label = 0005-5
projecting samples num: 32
projecting 00000057 image:
label = 0006-6
projecting samples num: 32
projecting 00000058 image:
label = 0005-5
projecting samples num: 32
projecting 00000059 image:
label = 0002-2
projecting samples num: 32
projecting 00000060 image:
label = 0001-1
projecting samples num: 32
projecting 00000061 image:
label = 0003-3
projecting samples num: 32
projecting 00000062 image:
label = 0002-2
projecting samples num: 32
projecting 00000063 image:
label = 0001-1
Finished dataset projecting !
pro_w_train.shape: torch.Size([32, 8, 512])
pro_y_train.shape: torch.Size([32, 8])
Projecting *svhn* 2/2290 batch data sets...
running projecting main()..............
Project original images from images tensor set !
projecting samples num: 32
projecting 00000064 image:
label = 0004-4
projecting samples num: 32
projecting 00000065 image:
label = 0006-6
projecting samples num: 32
projecting 00000066 image:
label = 0003-3
projecting samples num: 32
projecting 00000067 image:
label = 0008-8
projecting samples num: 32
projecting 00000068 image:
label = 0004-4
projecting samples num: 32
projecting 00000069 image:
label = 0003-3
projecting samples num: 32
projecting 00000070 image:
label = 0001-1
projecting samples num: 32
projecting 00000071 image:
label = 0004-4
projecting samples num: 32
projecting 00000072 image:
label = 0004-4
projecting samples num: 32
projecting 00000073 image:
label = 0002-2
projecting samples num: 32
projecting 00000074 image:
label = 0006-6
projecting samples num: 32
projecting 00000075 image:
label = 0004-4
projecting samples num: 32
projecting 00000076 image:
label = 0004-4
projecting samples num: 32
projecting 00000077 image:
label = 0001-1
projecting samples num: 32
projecting 00000078 image:
label = 0001-1
projecting samples num: 32
projecting 00000079 image:
label = 0001-1
projecting samples num: 32
projecting 00000080 image:
label = 0007-7
projecting samples num: 32
projecting 00000081 image:
label = 0003-3
projecting samples num: 32
projecting 00000082 image:
label = 0001-1
projecting samples num: 32
projecting 00000083 image:
label = 0002-2
projecting samples num: 32
projecting 00000084 image:
label = 0000-0
projecting samples num: 32
projecting 00000085 image:
label = 0004-4
projecting samples num: 32
projecting 00000086 image:
label = 0002-2
projecting samples num: 32
projecting 00000087 image:
label = 0002-2
projecting samples num: 32
projecting 00000088 image:
label = 0005-5
projecting samples num: 32
projecting 00000089 image:
label = 0001-1
projecting samples num: 32
projecting 00000090 image:
label = 0002-2
projecting samples num: 32
projecting 00000091 image:
label = 0009-9
projecting samples num: 32
projecting 00000092 image:
label = 0002-2
projecting samples num: 32
projecting 00000093 image:
label = 0000-0
projecting samples num: 32
projecting 00000094 image:
label = 0004-4
projecting samples num: 32
projecting 00000095 image:
label = 0001-1
Finished dataset projecting !
pro_w_train.shape: torch.Size([32, 8, 512])
pro_y_train.shape: torch.Size([32, 8])
Projecting *svhn* 3/2290 batch data sets...
running projecting main()..............
Project original images from images tensor set !
projecting samples num: 32
projecting 00000096 image:
label = 0000-0
projecting samples num: 32
projecting 00000097 image:
label = 0003-3
projecting samples num: 32
projecting 00000098 image:
label = 0002-2
projecting samples num: 32
projecting 00000099 image:
label = 0007-7
projecting samples num: 32
projecting 00000100 image:
label = 0002-2
projecting samples num: 32
projecting 00000101 image:
label = 0004-4
projecting samples num: 32
projecting 00000102 image:
label = 0004-4
projecting samples num: 32
projecting 00000103 image:
label = 0006-6
projecting samples num: 32
projecting 00000104 image:
label = 0008-8
projecting samples num: 32
projecting 00000105 image:
label = 0001-1
projecting samples num: 32
projecting 00000106 image:
label = 0007-7
projecting samples num: 32
projecting 00000107 image:
label = 0001-1
projecting samples num: 32
projecting 00000108 image: