

---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 110, in <module>
    cle_w_train, cle_y_train = target_classifier.getproset(args.projected_dataset)
  File "/home/maggie/mmat/clamodels/classifier.py", line 815, in getproset
    pro_wset_tensor, pro_yset_tensor = self.__getprosettensor__(pro_dataset_path)
  File "/home/maggie/mmat/clamodels/classifier.py", line 846, in __getprosettensor__
    w = np.load(projected_w_path)['w']
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/numpy/lib/npyio.py", line 444, in load
    raise ValueError("Cannot load file containing pickled data "
ValueError: Cannot load file containing pickled data when allow_pickle=False


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 110, in <module>
    cle_w_train, cle_y_train = target_classifier.getproset(args.projected_dataset)
  File "/home/maggie/mmat/clamodels/classifier.py", line 815, in getproset
    pro_wset_tensor, pro_yset_tensor = self.__getprosettensor__(pro_dataset_path)
  File "/home/maggie/mmat/clamodels/classifier.py", line 846, in __getprosettensor__
    w = np.load(projected_w_path)['w']
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/numpy/lib/npyio.py", line 444, in load
    raise ValueError("Cannot load file containing pickled data "
ValueError: Cannot load file containing pickled data when allow_pickle=False


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 110, in <module>
    cle_w_train, cle_y_train = target_classifier.getproset(args.projected_dataset)
  File "/home/maggie/mmat/clamodels/classifier.py", line 815, in getproset
    pro_wset_tensor, pro_yset_tensor = self.__getprosettensor__(pro_dataset_path)
  File "/home/maggie/mmat/clamodels/classifier.py", line 846, in __getprosettensor__
    w = np.load(projected_w_path)['w']
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/numpy/lib/npyio.py", line 444, in load
    raise ValueError("Cannot load file containing pickled data "
ValueError: Cannot load file containing pickled data when allow_pickle=False


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 110, in <module>
    cle_w_train, cle_y_train = target_classifier.getproset(args.projected_dataset)
  File "/home/maggie/mmat/clamodels/classifier.py", line 815, in getproset
    pro_wset_tensor, pro_yset_tensor = self.__getprosettensor__(pro_dataset_path)
  File "/home/maggie/mmat/clamodels/classifier.py", line 846, in __getprosettensor__
    w = np.load(projected_w_path)['w']
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/numpy/lib/npyio.py", line 444, in load
    raise ValueError("Cannot load file containing pickled data "
ValueError: Cannot load file containing pickled data when allow_pickle=False


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 110, in <module>
    cle_w_train, cle_y_train = target_classifier.getproset(args.projected_dataset)
  File "/home/maggie/mmat/clamodels/classifier.py", line 815, in getproset
    pro_wset_tensor, pro_yset_tensor = self.__getprosettensor__(pro_dataset_path)
  File "/home/maggie/mmat/clamodels/classifier.py", line 846, in __getprosettensor__
    w = np.load(projected_w_path)['w']
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/numpy/lib/npyio.py", line 444, in load
    raise ValueError("Cannot load file containing pickled data "
ValueError: Cannot load file containing pickled data when allow_pickle=False


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00005
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 110, in <module>
    cle_w_train, cle_y_train = target_classifier.getproset(args.projected_dataset)
  File "/home/maggie/mmat/clamodels/classifier.py", line 815, in getproset
    pro_wset_tensor, pro_yset_tensor = self.__getprosettensor__(pro_dataset_path)
  File "/home/maggie/mmat/clamodels/classifier.py", line 846, in __getprosettensor__
    w = np.load(projected_w_path)['w']
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/numpy/lib/npyio.py", line 444, in load
    raise ValueError("Cannot load file containing pickled data "
ValueError: Cannot load file containing pickled data when allow_pickle=False


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00000
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
epoch_correct_num: tensor(8045)
Accuary of before rmt trained classifier on clean testset:80.4500%
Loss of before mmat trained classifier clean testset:0.7182748913764954
cle_w_train.shape: torch.Size([25397, 8, 512])
cle_y_train.shape: torch.Size([25397, 8])
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.3
generating testset adversarial examples...
finished generate testset adversarial examples !
epoch_correct_num: tensor(664)
Accuary of before rmt trained classifier on adversarial testset:6.6400%
Loss of before mmat trained classifier on adversarial testset:6.4344611167907715
w_trainset_len: 25397
batch_size: 256
w_batch_num: 100


0epoch learning rate:0.1
right_index: 256
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 137, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train, cle_train_dataloader, cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1464, in rmt
    loss = self.__CustomSoftlossFunction__(outputs, targets)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1327, in __CustomSoftlossFunction__
    loss_a = cla_loss(batch_outputs, w1_label_index)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 1048, in forward
    ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 2693, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 1672, in log_softmax
    ret = input.log_softmax(dim)
AttributeError: 'GoogLeNetOutputs' object has no attribute 'log_softmax'


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00001
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
epoch_correct_num: tensor(8045)
Accuary of before rmt trained classifier on clean testset:80.4500%
Loss of before mmat trained classifier clean testset:0.7182748913764954
cle_w_train.shape: torch.Size([25397, 8, 512])
cle_y_train.shape: torch.Size([25397, 8])
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.3
generating testset adversarial examples...
finished generate testset adversarial examples !
epoch_correct_num: tensor(664)
Accuary of before rmt trained classifier on adversarial testset:6.6400%
Loss of before mmat trained classifier on adversarial testset:6.4344611167907715
w_trainset_len: 25397
batch_size: 256
w_batch_num: 100


0epoch learning rate:0.01
right_index: 256
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 137, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train, cle_train_dataloader, cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1464, in rmt
    loss = self.__CustomSoftlossFunction__(outputs, targets)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1327, in __CustomSoftlossFunction__
    loss_a = cla_loss(batch_outputs, w1_label_index)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 1048, in forward
    ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 2693, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 1672, in log_softmax
    ret = input.log_softmax(dim)
AttributeError: 'GoogLeNetOutputs' object has no attribute 'log_softmax'


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00002
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
epoch_correct_num: tensor(8045)
Accuary of before rmt trained classifier on clean testset:80.4500%
Loss of before mmat trained classifier clean testset:0.7182748913764954
cle_w_train.shape: torch.Size([25397, 8, 512])
cle_y_train.shape: torch.Size([25397, 8])
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.3
generating testset adversarial examples...
finished generate testset adversarial examples !
epoch_correct_num: tensor(664)
Accuary of before rmt trained classifier on adversarial testset:6.6400%
Loss of before mmat trained classifier on adversarial testset:6.4344611167907715
w_trainset_len: 25397
batch_size: 256
w_batch_num: 100


0epoch learning rate:0.001
right_index: 256
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 137, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train, cle_train_dataloader, cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1464, in rmt
    loss = self.__CustomSoftlossFunction__(outputs, targets)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1327, in __CustomSoftlossFunction__
    loss_a = cla_loss(batch_outputs, w1_label_index)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 1048, in forward
    ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 2693, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 1672, in log_softmax
    ret = input.log_softmax(dim)
AttributeError: 'GoogLeNetOutputs' object has no attribute 'log_softmax'


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00003
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
epoch_correct_num: tensor(8045)
Accuary of before rmt trained classifier on clean testset:80.4500%
Loss of before mmat trained classifier clean testset:0.7182748913764954
cle_w_train.shape: torch.Size([25397, 8, 512])
cle_y_train.shape: torch.Size([25397, 8])
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.3
generating testset adversarial examples...
finished generate testset adversarial examples !
epoch_correct_num: tensor(664)
Accuary of before rmt trained classifier on adversarial testset:6.6400%
Loss of before mmat trained classifier on adversarial testset:6.4344611167907715
w_trainset_len: 25397
batch_size: 256
w_batch_num: 100


0epoch learning rate:0.1
right_index: 256
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 137, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train, cle_train_dataloader, cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1464, in rmt
    loss = self.__CustomSoftlossFunction__(outputs, targets)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1327, in __CustomSoftlossFunction__
    loss_a = cla_loss(batch_outputs, w1_label_index)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 1048, in forward
    ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 2693, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 1672, in log_softmax
    ret = input.log_softmax(dim)
AttributeError: 'GoogLeNetOutputs' object has no attribute 'log_softmax'


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00004
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
epoch_correct_num: tensor(8045)
Accuary of before rmt trained classifier on clean testset:80.4500%
Loss of before mmat trained classifier clean testset:0.7182748913764954
cle_w_train.shape: torch.Size([25397, 8, 512])
cle_y_train.shape: torch.Size([25397, 8])
cle_x_test.shape: torch.Size([10000, 3, 32, 32])
cle_y_test.shape: torch.Size([10000])
adv_x_test.shape: torch.Size([10000, 3, 32, 32])
adv_y_test.shape: torch.Size([10000])
initlize attack classifier
Get FGSM examples generate model
self._args.attack_eps: 0.3
generating testset adversarial examples...
finished generate testset adversarial examples !
epoch_correct_num: tensor(664)
Accuary of before rmt trained classifier on adversarial testset:6.6400%
Loss of before mmat trained classifier on adversarial testset:6.4344611167907715
w_trainset_len: 25397
batch_size: 256
w_batch_num: 100


0epoch learning rate:0.01
right_index: 256
Setting up PyTorch plugin "bias_act_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Setting up PyTorch plugin "upfirdn2d_plugin"... /home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/utils/cpp_extension.py:286: UserWarning: 

                               !! WARNING !!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Your compiler (c++) is not compatible with the compiler Pytorch was
built with for this platform, which is g++ on linux. Please
use g++ to to compile your extension. Alternatively, you may
compile PyTorch from source using c++, and then you can also use
c++ to compile your extension.

See https://github.com/pytorch/pytorch/blob/master/CONTRIBUTING.md for help
with compiling PyTorch from source.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                              !! WARNING !!

  platform=sys.platform))
Done.
Traceback (most recent call last):
  File "tasklauncher-20210924.py", line 137, in <module>
    target_classifier.rmt(args,cle_w_train,cle_y_train, cle_train_dataloader, cle_x_test,cle_y_test,adv_x_test,adv_y_test,exp_result_dir,stylegan2ada_config_kwargs)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1464, in rmt
    loss = self.__CustomSoftlossFunction__(outputs, targets)
  File "/home/maggie/mmat/clamodels/classifier.py", line 1327, in __CustomSoftlossFunction__
    loss_a = cla_loss(batch_outputs, w1_label_index)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/modules/loss.py", line 1048, in forward
    ignore_index=self.ignore_index, reduction=self.reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 2693, in cross_entropy
    return nll_loss(log_softmax(input, 1), target, weight, None, ignore_index, None, reduction)
  File "/home/xieyi/anaconda3/envs/mmat/lib/python3.7/site-packages/torch/nn/functional.py", line 1672, in log_softmax
    ret = input.log_softmax(dim)
AttributeError: 'GoogLeNetOutputs' object has no attribute 'log_softmax'


---------------------------------------
Torch cuda is available
args.subcommand=run, run the command line
date: 20210927
Experiment result save dir: /home/maggie/mmat/result/defense/rmt/fgsm/basemixup-betasampler/googlenet-cifar10/20210927/00005
initilize the dataset loading parameters
load cifar10 dataset
Loading *cifar10* train dataloader finished !
Loading *cifar10* test dataloader finished !
initlize classifier
learned calssify model != None
